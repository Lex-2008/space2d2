{
  "version": 3,
  "sources": ["textFit/textFit.js", "src/geometry.ts", "src/angle.ts", "src/utils.ts", "src/planets.ts", "src/stars.ts", "src/universe.ts", "src/hints.ts", "src/flightplan.ts", "src/draw.ts", "src/index.ts"],
  "sourcesContent": ["/**\n * textFit v2.3.1\n * Previously known as jQuery.textFit\n * 11/2014 by STRML (strml.github.com)\n * MIT License\n *\n * To use: textFit(document.getElementById('target-div'), options);\n *\n * Will make the *text* content inside a container scale to fit the container\n * The container is required to have a set width and height\n * Uses binary search to fit text with minimal layout calls.\n * Version 2.0 does not use jQuery.\n */\n/*global define:true, document:true, window:true, HTMLElement:true*/\n\n(function(root, factory) {\n  \"use strict\";\n\n  // UMD shim\n  if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // Node/CommonJS\n    module.exports = factory();\n  } else {\n    // Browser\n    root.textFit = factory();\n  }\n\n}(typeof global === \"object\" ? global : this, function () {\n  \"use strict\";\n\n  var defaultSettings = {\n    alignVert: false, // if true, textFit will align vertically using css tables\n    alignHoriz: false, // if true, textFit will set text-align: center\n    multiLine: false, // if true, textFit will not set white-space: no-wrap\n    detectMultiLine: true, // disable to turn off automatic multi-line sensing\n    minFontSize: 6,\n    maxFontSize: 80,\n    reProcess: true, // if true, textFit will re-process already-fit nodes. Set to 'false' for better performance\n    widthOnly: false, // if true, textFit will fit text to element width, regardless of text height\n    alignVertWithFlexbox: false, // if true, textFit will use flexbox for vertical alignment\n  };\n\n  return function textFit(els, options) {\n\n    if (!options) options = {};\n\n    // Extend options.\n    var settings = {};\n    for(var key in defaultSettings){\n      if(options.hasOwnProperty(key)){\n        settings[key] = options[key];\n      } else {\n        settings[key] = defaultSettings[key];\n      }\n    }\n\n    // Convert jQuery objects into arrays\n    if (typeof els.toArray === \"function\") {\n      els = els.toArray();\n    }\n\n    // Support passing a single el\n    var elType = Object.prototype.toString.call(els);\n    if (elType !== '[object Array]' && elType !== '[object NodeList]' &&\n            elType !== '[object HTMLCollection]'){\n      els = [els];\n    }\n\n    // Process each el we've passed.\n    for(var i = 0; i < els.length; i++){\n      processItem(els[i], settings);\n    }\n  };\n\n  /**\n   * The meat. Given an el, make the text inside it fit its parent.\n   * @param  {DOMElement} el       Child el.\n   * @param  {Object} settings     Options for fit.\n   */\n  function processItem(el, settings){\n    if (!isElement(el) || (!settings.reProcess && el.getAttribute('textFitted'))) {\n      return false;\n    }\n\n    // Set textFitted attribute so we know this was processed.\n    if(!settings.reProcess){\n      el.setAttribute('textFitted', 1);\n    }\n\n    var innerSpan, originalHeight, originalHTML, originalWidth;\n    var low, mid, high;\n\n    // Get element data.\n    originalHTML = el.innerHTML;\n    originalWidth = innerWidth(el);\n    originalHeight = innerHeight(el);\n\n    // Don't process if we can't find box dimensions\n    if (!originalWidth || (!settings.widthOnly && !originalHeight)) {\n      if(!settings.widthOnly)\n        throw new Error('Set a static height and width on the target element ' + el.outerHTML +\n          ' before using textFit!');\n      else\n        throw new Error('Set a static width on the target element ' + el.outerHTML +\n          ' before using textFit!');\n    }\n\n    // Add textFitted span inside this container.\n    if (originalHTML.indexOf('textFitted') === -1) {\n      innerSpan = document.createElement('span');\n      innerSpan.className = 'textFitted';\n      // Inline block ensure it takes on the size of its contents, even if they are enclosed\n      // in other tags like <p>\n      innerSpan.style['display'] = 'inline-block';\n      innerSpan.innerHTML = originalHTML;\n      el.innerHTML = '';\n      el.appendChild(innerSpan);\n    } else {\n      // Reprocessing.\n      innerSpan = el.querySelector('span.textFitted');\n      // Remove vertical align if we're reprocessing.\n      if (hasClass(innerSpan, 'textFitAlignVert')){\n        innerSpan.className = innerSpan.className.replace('textFitAlignVert', '');\n        innerSpan.style['height'] = '';\n        el.className.replace('textFitAlignVertFlex', '');\n      }\n    }\n\n    // Prepare & set alignment\n    if (settings.alignHoriz) {\n      el.style['text-align'] = 'center';\n      innerSpan.style['text-align'] = 'center';\n    }\n\n    // Check if this string is multiple lines\n    // Not guaranteed to always work if you use wonky line-heights\n    var multiLine = settings.multiLine;\n    if (settings.detectMultiLine && !multiLine &&\n        innerSpan.getBoundingClientRect().height >= parseInt(window.getComputedStyle(innerSpan)['font-size'], 10) * 2){\n      multiLine = true;\n    }\n\n    // If we're not treating this as a multiline string, don't let it wrap.\n    if (!multiLine) {\n      el.style['white-space'] = 'nowrap';\n    }\n\n    low = settings.minFontSize;\n    high = settings.maxFontSize;\n\n    // Binary search for highest best fit\n    var size = low;\n    while (low <= high) {\n      mid = (high + low) >> 1;\n      innerSpan.style.fontSize = mid + 'px';\n      var innerSpanBoundingClientRect = innerSpan.getBoundingClientRect();\n      if (\n        innerSpanBoundingClientRect.width <= originalWidth \n        && (settings.widthOnly || innerSpanBoundingClientRect.height <= originalHeight)\n      ) {\n        size = mid;\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n      // await injection point\n    }\n    // found, updating font if differs:\n    if( innerSpan.style.fontSize != size + 'px' ) innerSpan.style.fontSize = size + 'px';\n\n    // Our height is finalized. If we are aligning vertically, set that up.\n    if (settings.alignVert) {\n      addStyleSheet();\n      var height = innerSpan.scrollHeight;\n      if (window.getComputedStyle(el)['position'] === \"static\"){\n        el.style['position'] = 'relative';\n      }\n      if (!hasClass(innerSpan, \"textFitAlignVert\")){\n        innerSpan.className = innerSpan.className + \" textFitAlignVert\";\n      }\n      innerSpan.style['height'] = height + \"px\";\n      if (settings.alignVertWithFlexbox && !hasClass(el, \"textFitAlignVertFlex\")) {\n        el.className = el.className + \" textFitAlignVertFlex\";\n      }\n    }\n  }\n\n  // Calculate height without padding.\n  function innerHeight(el){\n    var style = window.getComputedStyle(el, null);\n    return el.getBoundingClientRect().height -\n      parseInt(style.getPropertyValue('padding-top'), 10) -\n      parseInt(style.getPropertyValue('padding-bottom'), 10);\n  }\n\n  // Calculate width without padding.\n  function innerWidth(el){\n    var style = window.getComputedStyle(el, null);\n    return el.getBoundingClientRect().width -\n      parseInt(style.getPropertyValue('padding-left'), 10) -\n      parseInt(style.getPropertyValue('padding-right'), 10);\n  }\n\n  //Returns true if it is a DOM element\n  function isElement(o){\n    return (\n      typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n      o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName===\"string\"\n    );\n  }\n\n  function hasClass(element, cls) {\n    return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\n  }\n\n  // Better than a stylesheet dependency\n  function addStyleSheet() {\n    if (document.getElementById(\"textFitStyleSheet\")) return;\n    var style = [\n      \".textFitAlignVert{\",\n        \"position: absolute;\",\n        \"top: 0; right: 0; bottom: 0; left: 0;\",\n        \"margin: auto;\",\n        \"display: flex;\",\n        \"justify-content: center;\",\n        \"flex-direction: column;\",\n      \"}\",\n      \".textFitAlignVertFlex{\",\n        \"display: flex;\",\n      \"}\",\n      \".textFitAlignVertFlex .textFitAlignVert{\",\n        \"position: static;\",\n      \"}\",].join(\"\");\n\n    var css = document.createElement(\"style\");\n    css.type = \"text/css\";\n    css.id = \"textFitStyleSheet\";\n    css.innerHTML = style;\n    document.body.appendChild(css);\n  }\n}));\n", "type vector = [number, number];\n\nfunction normVector(x: number, y: number): vector {\n\tconst d = Math.hypot(x, y);\n\treturn [x / d, y / d];\n}\n\nfunction scalarMul(v1: vector, v2: vector): number {\n\treturn v1[0] * v2[0] + v1[1] * v2[1];\n}\n\ninterface point {\n\tx: number,\n\ty: number\n}\n\n// see http://www.gamedev.ru/code/forum/?id=74832 and https://ru.wikipedia.org/wiki/\u0420\u0430\u0441\u0441\u0442\u043E\u044F\u043D\u0438\u0435_\u043E\u0442_\u0442\u043E\u0447\u043A\u0438_\u0434\u043E_\u043F\u0440\u044F\u043C\u043E\u0439_\u043D\u0430_\u043F\u043B\u043E\u0441\u043A\u043E\u0441\u0442\u0438#\u041F\u0440\u044F\u043C\u0430\u044F_\u0437\u0430\u0434\u0430\u043D\u0430_\u0434\u0432\u0443\u043C\u044F_\u0442\u043E\u0447\u043A\u0430\u043C\u0438\nfunction dotOnLine(a: point, b: point, p: point): vector {\n\tconst v = normVector(a.x - b.x, a.y - b.y);\n\tconst m = scalarMul(v, [p.x - b.x, p.y - b.y]);\n\treturn [b.x + v[0] * m, b.y + v[1] * m];\n}\n\n// does a-b line cross obj p with size?\nexport function lineCrossesObj(a: point, b: point, p: point, size: number) {\n\tconst [x, y] = dotOnLine(a, b, p);\n\treturn x >= Math.min(a.x, b.x) &&\n\t\tx <= Math.max(a.x, b.x) &&\n\t\ty >= Math.min(a.y, b.y) &&\n\t\ty <= Math.max(a.y, b.y) &&\n\t\tMath.hypot(x - p.x, y - p.y) < size;\n}\n\n\n// see https://e-maxx.ru/algo/segments_intersection_checking\n\nfunction area(a: point, b: point, c: point) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n}\n\nfunction intersect_1(a: number, b: number, c: number, d: number) {\n\tif (a > b) [a, b] = [b, a];\n\tif (c > d) [c, d] = [d, c];\n\treturn Math.max(a, c) <= Math.min(b, d);\n}\n\nexport function intersect(a: point, b: point, c: point, d: point) {\n\treturn intersect_1(a.x, b.x, c.x, d.x)\n\t\t&& intersect_1(a.y, b.y, c.y, d.y)\n\t\t&& area(a, b, c) * area(a, b, d) <= 0\n\t\t&& area(c, d, a) * area(c, d, b) <= 0;\n}\n", "import { portal_pad } from \"./draw.js\";\nimport { Planet } from \"./planets.js\";\nimport { Star } from \"./stars.js\";\n\nfunction calc_xy(value: number, size: number): [number, number] {\n\tvar x = Math.cos(value / 180 * Math.PI);\n\tvar y = -Math.sin(value / 180 * Math.PI);\n\tvar scale = 1 / Math.max(Math.abs(x), Math.abs(y));\n\t// size-=1;\n\tsize += portal_pad;\n\tx = x * scale * size / 2 + size / 2 - portal_pad / 2;//+0.5;\n\ty = y * scale * size / 2 + size / 2 - portal_pad / 2;//+0.5;\n\treturn [x, y];\n}\n\nexport class Direction {\n\ttarget: Star | undefined; //something this vector points at, can be null - not used by the class itself\n\tx: number; y: number; // portal coordinates, calculated during creation\n\t#value: number; //angle, value can be -179..+180.\n\tlist: Directions; //optional, list which this direction is part of\n\t// We could limit it to 0..360, but it would complicate calculating \"to the left\"/\"to the right\" values\n\tconstructor(value: number, owner: Star, target?: Star) {\n\t\tthis.value = value;\n\t\tthis.target = target;\n\t\t[this.x, this.y] = calc_xy(value, owner.size);\n\t}\n\tstatic normalize(value: number): number {\n\t\twhile (value <= -180) value += 360;\n\t\twhile (value > +180) value -= 360;\n\t\treturn value;\n\t}\n\tget value() { return this.#value }\n\tset value(value) { this.#value = Direction.normalize(value) }\n\tangleTo(value: number | Direction) {\n\t\tif (value instanceof Direction) return this.angleTo(value.value);\n\t\treturn Direction.normalize(value - this.#value);\n\t}\n\tpositiveAngleTo(value: number | Direction): number {\n\t\tconst angle = this.angleTo(value);\n\t\tif (angle < 0) return angle + 360;\n\t\treturn angle;\n\t}\n\t// // functions which return value (angle between two vectors, or their sum)\n\tadd(value: number) {\n\t\t//if(value instanceof Direction) return this.add(value.value);\n\t\treturn Direction.normalize(this.#value + value);\n\t}\n\t// sub(value){\n\t// \tif(value instanceof Direction) return this.sub(value.value);\n\t// \treturn Direction.normalize(this.#value - value);\n\t// }\n\t// // functions which change value of this vector\n\t// inc(value){ this.#value = this.add(value) }\n\t// dec(value){ this.#value = this.sub(value) }\n\t// // handy functions which propagate to parent list\n\t// // they will return 'undefined' if this.list is not set\n\t// next() { return this.list && this.list.next(this) }\n\t// prev() { return this.list && this.list.prev(this) }\n\t// left() { return this.list && this.list.left(this) }\n\t// right() { return this.list && this.list.right(this) }\n}\n\nexport class Directions {\n\t#list: Direction[]; // ordered list of directions\n\towner: Star; // star, to which this list belongs to\n\tconstructor(owner: Star) {\n\t\tthis.#list = [];\n\t\tthis.owner = owner;\n\t}\n\t*[Symbol.iterator]() {\n\t\tfor (var item of this.#list) yield item;\n\t}\n\tadd(new_item: Direction) {\n\t\t// console.trace(`adding ${new_item.value} to ${this.owner.name}`);\n\t\tlet index = this.#list.findIndex(item => item.value > new_item.value);\n\t\tif (index < 0) index = this.#list.length;\n\t\tthis.#list.splice(index, 0, new_item);\n\t\tnew_item.list = this;\n\t}\n\t// returns index of whatever is passed - either Direction, or is value\n\tindexOf(value: number | Direction | Star): number {\n\t\tif (value instanceof Direction) return this.#list.indexOf(value);\n\t\tif (typeof value == \"number\") {\n\t\t\tvalue = Direction.normalize(value);\n\t\t\treturn this.#list.findIndex(item => item.value == value);\n\t\t} else {\n\t\t\treturn this.#list.findIndex(item => item.target == value);\n\t\t}\n\t}\n\tangleBetween(a: number | Star | Direction, b: number | Star | Direction): number {\n\t\tconst aa = (a instanceof Direction) ? a : this.directionOf(a);\n\t\tconst bb = (b instanceof Direction) ? b : this.directionOf(b);\n\t\tif (aa == null || bb == null) throw new ReferenceError(`either ${a} or ${b} is not part of this list`);\n\t\treturn aa.angleTo(bb);\n\t}\n\tget count() { return this.#list.length }\n\t// returns Direction object with given target, or null if none found\n\tdirectionOf(value: number | Star | Direction): Direction {\n\t\tlet index = this.indexOf(value);\n\t\tif (index < 0) throw ReferenceError(\"${item} is not part of ${this} directions list\");\n\t\treturn this.#list[index];\n\t}\n\t// insert new item, or set a target of an existing one\n\tlink(value: number, target?: Star) {\n\t\tlet index = this.indexOf(value);\n\t\tif (index < 0) {\n\t\t\tthis.add(new Direction(value, this.owner, target));\n\t\t} else {\n\t\t\tthis.#list[index].target = target;\n\t\t}\n\t}\n\t// functions to navigate the list\n\t// if item is not in the list - returns first or last element\n\tnext(item: number | Star | Direction): Direction {\n\t\tlet index = this.indexOf(item);\n\t\tif (index < 0) throw ReferenceError(\"${item} is not part of ${this} directions list\");\n\t\treturn this.#list[index + 1] || this.#list[0];\n\t}\n\tprev(item: number | Star | Direction): Direction {\n\t\tlet index = this.indexOf(item);\n\t\tif (index < 0) throw ReferenceError(\"${item} is not part of ${this} directions list\");\n\t\treturn this.#list[index - 1] || this.#list.at(-1);\n\t}\n\t// aliases\n\tleft(item: number | Star | Direction) { return this.next(item) }\n\tright(item: number | Star | Direction) { return this.prev(item) }\n}\n", "export function randomInt(a: number, b: number): number {\n\tif (a > b) [a, b] = [b, a];\n\treturn Math.floor(Math.random() * (b - a + 1)) + a;\n}\n\nexport function randomFrom<T>(a: T[]): T {\n\treturn a[Math.floor(Math.random() * a.length)];\n}\n\nexport function shuffle<T>(array: T[]): T[] {\n\treturn array.map((a: any) => ({ sort: Math.random(), value: a }))\n\t\t.sort((a: { sort: number; }, b: { sort: number; }) => a.sort - b.sort)\n\t\t.map((a: { value: any; }) => a.value)\n}\n\nexport function seq(a: number): number[] {\n\treturn [...Array(a).keys()]\n\t//=> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n}\n", "import { shuffle, seq } from \"./utils\";\n\nexport type PlanetType = [string, string | null, string | null, string, string];\n\nexport const resources = ['water', 'iron', 'food', 'radioactives'];\nvar planetTypes = (function () {\n\tvar colors = ['blue', 'yellow', 'green', 'red'];\n\tvar planetNamesTable = [ // table: rows: what planet buys; columns: what planet sells; value: planet name\n\t\t[null, 'water-mining', 'farming', 'burning'],\n\t\t['ice', null, 'hunting', 'fire'],\n\t\t['fishy', 'bio-mining', null, 'nuclear'],\n\t\t['frozen', 'hot mining', 'ice-farming', null]];\n\n\tvar ret: PlanetType[] = [\n\t\t['ocean', null, 'water', 'navy', 'blue'],\n\t\t['dry', 'water', null, 'blue', 'white'],\n\t\t['mining', null, 'iron', 'olive', 'yellow'],\n\t\t['populated', 'food', null, 'green', 'lime']];\n\n\tfor (var buy = 0; buy < 4; buy++) {\n\t\tfor (var sell = 0; sell < 4; sell++) {\n\t\t\tif (buy == sell) continue;\n\t\t\tret.push([planetNamesTable[buy][sell] as string, resources[buy], resources[sell], colors[buy], colors[sell]])\n\t\t}\n\t}\n\treturn ret;\n})();\n\nexport class Planet {\n\tx: number; y: number;\n\ttype: number;\n\tname: string;\n\tbuys: string | null;\n\tsells: string | null;\n\tcolor_in: string;\n\tcolor_out: string;\n\tconstructor(x: number, y: number, type_n: number) {\n\t\tvar type = planetTypes[type_n];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.type = type_n;\n\t\tthis.name = type[0];\n\t\tthis.buys = type[1];\n\t\tthis.sells = type[2];\n\t\tthis.color_in = type[3];\n\t\tthis.color_out = type[4];\n\t}\n\tsave(): [number, number, number] {\n\t\treturn [this.x, this.y, this.type];\n\t}\n}\n\nfunction isBad(x: number, y: number, size: number) {\n\tvar center = size / 2;\n\treturn x < center + 0.6 && x > center - 0.6 && y < center + 0.6 && y > center - 0.6;\n}\n\nexport function makePlanets(size: number) {\n\tvar thisPlanetTypes = shuffle(seq(planetTypes.length));\n\tfor (var _n = 0; _n < 100; _n++) {\n\t\tvar bad = false;\n\t\tvar ret: [number, number, number][] = [];\n\t\tvar xx = shuffle(seq(size));\n\t\tvar yy = shuffle(seq(size));\n\t\t// console.log(_n,xx,yy);\n\t\tvar center = size / 2;\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (isBad(xx[i] + 0.5, yy[i] + 0.5, size)) {\n\t\t\t\tbad = true;\n\t\t\t}\n\t\t\tret.push([xx[i] + 0.5, yy[i] + 0.5, thisPlanetTypes[i]]);\n\t\t}\n\t\tif (!bad) return ret;\n\t}\n\tconsole.error('should not be here');\n\treturn [];\n}\n", "// 1. copypaste table from https://www.cssportal.com/css3-color-names/ to vim\n// 2. :%s/^\\t\\([^\\t]*\\)\\t#[^\\t]*\\t/['\\1', /\n// 3. :%s/$/],/\n// 4. copypaste from vim to JS console, assign to var data=[...]\n// 5. use RGBToHSL function from https://css-tricks.com/converting-color-spaces-in-javascript/, modified to return only 'l' as number\n// 6. out=data.map(x=>[x[0],RGBToHSL(x[1],x[2],x[3])])\n\nimport { Directions, Direction } from \"./angle.js\";\nimport { portals_ext } from \"./draw.js\";\nimport { makePlanets, Planet, PlanetType, resources } from \"./planets.js\";\nimport { seq, randomFrom, randomInt } from \"./utils.js\";\n\n// 7. prompt('',JSON.stringify(out.filter(x=>x[1]>40).map(x=>x[0])))\nvar starColors = [\"AliceBlue\", \"AntiqueWhite\", \"Aqua\", \"Aquamarine\", \"Azure\", \"Beige\", \"Bisque\", \"BlanchedAlmond\", \"Blue\", \"BlueViolet\", \"Brown\", \"BurlyWood\", \"CadetBlue\", \"Chartreuse\", \"Chocolate\", \"Coral\", \"CornflowerBlue\", \"Cornsilk\", \"Crimson\", \"Cyan\", \"DarkGray\", \"DarkGrey\", \"DarkKhaki\", \"DarkOrange\", \"DarkOrchid\", \"DarkSalmon\", \"DarkSeaGreen\", \"DarkTurquoise\", \"DarkViolet\", \"DeepPink\", \"DeepSkyBlue\", \"DimGray\", \"DodgerBlue\", \"FireBrick\", \"FloralWhite\", \"Fuchsia\", \"Gainsboro\", \"GhostWhite\", \"Gold\", \"Goldenrod\", \"Gray\", \"GreenYellow\", \"Grey\", \"Honeydew\", \"HotPink\", \"IndianRed\", \"Ivory\", \"Khaki\", \"Lavender\", \"LavenderBlush\", \"LawnGreen\", \"LemonChiffon\", \"LightBlue\", \"LightCoral\", \"LightCyan\", \"LightGoldenrodYellow\", \"LightGray\", \"LightGreen\", \"LightGrey\", \"LightPink\", \"LightSalmon\", \"LightSeaGreen\", \"LightSkyBlue\", \"LightSlateGray\", \"LightSlateGrey\", \"LightSteelBlue\", \"LightYellow\", \"Lime\", \"LimeGreen\", \"Linen\", \"Magenta\", \"MediumAquamarine\", \"MediumBlue\", \"MediumOrchid\", \"MediumPurple\", \"MediumSeaGreen\", \"MediumSlateBlue\", \"MediumSpringGreen\", \"MediumTurquoise\", \"MediumVioletRed\", \"MintCream\", \"MistyRose\", \"Moccasin\", \"NavajoWhite\", \"OldLace\", \"Orange\", \"OrangeRed\", \"Orchid\", \"PaleGoldenrod\", \"PaleGreen\", \"PaleTurquoise\", \"PaleVioletRed\", \"PapayaWhip\", \"PeachPuff\", \"Peru\", \"Pink\", \"Plum\", \"PowderBlue\", \"Red\", \"RosyBrown\", \"RoyalBlue\", \"Salmon\", \"SandyBrown\", \"Seashell\", \"Sienna\", \"Silver\", \"SkyBlue\", \"SlateBlue\", \"SlateGray\", \"SlateGrey\", \"Snow\", \"SpringGreen\", \"SteelBlue\", \"Tan\", \"Thistle\", \"Tomato\", \"Turquoise\", \"Violet\", \"Wheat\", \"White\", \"WhiteSmoke\", \"Yellow\", \"YellowGreen\"];\n\nfunction mkgrid(star: Star, size: number) {\n\tvar grid: (Star | undefined)[][] = seq(size + 2 * portals_ext).map(x => []);\n\tvar center = (size - 1) / 2;\n\tfor (var x = Math.floor(center); x <= Math.ceil(center); x++) {\n\t\tfor (var y = Math.floor(center); y <= Math.ceil(center); y++) {\n\t\t\tgrid[x + 1 * portals_ext][y + 1 * portals_ext] = star;\n\t\t}\n\t}\n\treturn grid;\n}\n\nfunction countJobs(planets: Planet[]) {\n\tvar data = { 'null': { buys: 0, sells: 0 } };\n\tresources.forEach(x => { data[x] = { buys: 0, sells: 0 } });\n\tplanets.forEach((planet: Planet) => { data[String(planet.buys)].buys++; data[String(planet.sells)].sells++ });\n\tvar jobs = 0;\n\tresources.forEach(x => { jobs += Math.min(data[x].buys, data[x].sells) });\n\treturn jobs;\n}\n\nexport interface StarData {\n\tc: string,\n\ts: number,\n\tn: number[] | false,\n\tp: [number, number, number][] | false,\n\tv: boolean,\n}\n\nexport class Star {\n\tcolor: string;\n\tsize: number;\n\tvisited: boolean;\n\tx: number; y: number;\n\tbright: boolean;\n\tname: string;\n\tneighbours: Directions;\n\tgrid: (Star | Planet | undefined)[][];\n\tplanets: Planet[];\n\tjobs: number;\n\n\tconstructor(load?: StarData) {\n\t\tif (!load) {\n\t\t\tload = {\n\t\t\t\tc: randomFrom(starColors),\n\t\t\t\ts: randomInt(5, 9),\n\t\t\t\tn: false,\n\t\t\t\tp: false,\n\t\t\t\tv: false,\n\t\t\t}\n\n\t\t}\n\t\t// TODO: make sure colors don't repeat\n\t\tthis.color = load.c;\n\t\tthis.size = load.s;\n\t\tthis.visited = load.v;\n\t\tthis.x = this.y = this.size / 2;\n\t\tthis.bright = false;\n\t\tthis.name = this.color;\n\t\tif (this.size % 2 == 0) {\n\t\t\tthis.bright = true;\n\t\t\tthis.name = 'bright ' + this.name;\n\t\t}\n\t\tthis.neighbours = new Directions(this);\n\t\tif (load.n) {\n\t\t\tfor (var value of load.n) {\n\t\t\t\tthis.neighbours.add(new Direction(value, this));\n\t\t\t}\n\t\t}\n\t\tthis.grid = mkgrid(this, this.size);\n\t\tif (!load.p) load.p = makePlanets(this.size); //from planets.js\n\t\tthis.planets = load.p.map((x) => new Planet(...x));\n\t\tfor (var planet of this.planets) {\n\t\t\tthis.grid[Math.floor(planet.x) + 1 * portals_ext][Math.floor(planet.y) + 1 * portals_ext] = planet;\n\t\t}\n\t\tthis.jobs = countJobs(this.planets);\n\t}\n\n\tlink(other: Star, direction: number | Direction) {\n\t\tif (direction instanceof Direction) {\n\t\t\tdirection.target = other;\n\t\t\tother.neighbours.link(direction.value + 180, this);\n\t\t} else {\n\t\t\tthis.neighbours.link(direction, other);\n\t\t\tother.neighbours.link(direction + 180, this);\n\t\t}\n\t}\n\n\tsave(): StarData {\n\t\treturn {\n\t\t\tc: this.color,\n\t\t\ts: this.size,\n\t\t\tn: Array.from(this.neighbours).map(x => x.value),\n\t\t\tp: this.planets.map(x => x.save()),\n\t\t\tv: this.visited,\n\t\t};\n\t}\n}\n\n", "import { Direction } from \"./angle.js\";\nimport { flightplan } from \"./flightplan.js\";\nimport { Star, StarData } from \"./stars.js\";\nimport { randomInt } from \"./utils.js\";\n\nexport var player_star: Star;\nexport function set_player_star(x: Star) { player_star = x };\n\n// Universe is just one star with its neighbours\nexport const default_universe = '{\"v\":1,\"s\":{\"c\":\"Yellow\",\"s\":4,\"n\":[-134,-71,-18,34,110,177],\"p\":[[2.5,0.5,3],[1.5,3.5,0],[3.5,2.5,5]],\"v\":false},\"n\":[{\"c\":\"LightGreen\",\"s\":5,\"n\":[-145,-80,-8,46,99,151],\"p\":[[4.5,2.5,2],[1.5,0.5,9],[3.5,3.5,7],[2.5,1.5,12],[0.5,4.5,11]],\"v\":0},{\"c\":\"LightGray\",\"s\":5,\"n\":[-128,-77,-27,46,109,172],\"p\":[[2.5,4.5,1],[3.5,2.5,9],[1.5,1.5,10],[0.5,3.5,15],[4.5,0.5,0]],\"v\":false},{\"c\":\"Peru\",\"s\":5,\"n\":[-134,-79,-52,-9,34,98,162],\"p\":[[1.5,2.5,9],[4.5,1.5,6],[2.5,4.5,2],[3.5,0.5,0],[0.5,3.5,12]],\"v\":false},{\"c\":\"Bisque\",\"s\":5,\"n\":[-146,-82,-19,9,52,94,169],\"p\":[[3.5,1.5,4],[1.5,3.5,9],[2.5,4.5,14],[0.5,2.5,2],[4.5,0.5,10]],\"v\":false},{\"c\":\"LightBlue\",\"s\":6,\"n\":[-137,-70,-11,41,92,156],\"p\":[[1.5,3.5,13],[4.5,5.5,4],[5.5,2.5,6],[3.5,0.5,15],[2.5,4.5,3],[0.5,1.5,0]],\"v\":false},{\"c\":\"LightSeaGreen\",\"s\":5,\"n\":[-144,-81,-3,43,88,154],\"p\":[[4.5,2.5,13],[3.5,4.5,14],[1.5,0.5,7],[2.5,3.5,11],[0.5,1.5,3]],\"v\":1}],\"f\":{\"x\":-0.25,\"y\":1.882,\"c\":null},\"st\":{\"p\":0,\"s\":0,\"jf\":0,\"js\":0}}';\n\n// function task(){\n// \tvar a=0.5, b=1; //coords of home planet\n// \tvar r=0.25; // radius of planet/orbit height\n// \tvar x0=1.5, y0=3.5; // coords of dest planet\n// \tconsole.log(`solve (x1-${a})^2+(y1-${b})^2=${r}^2, (${x0}-x1)*(x1-${a})+(${y0}-y1)*(y1-${b})=0 for x1,y1`)\n// \t// x1\u22480.277504 \u2227 y1\u22481.114\n// }\n\nfunction measureAngle(x: Star, a: Star | Direction, b: Star | Direction) {\n\treturn x.neighbours.directionOf(a).angleTo(x.neighbours.directionOf(b));\n}\n\n// move player from one star to the new one\nexport function moveToNewStar(star: Star, oldStar: Star) {\n\t// 1. create new systems\n\tvar newStars: Star[] = [];\n\tfor (var connection of star.neighbours) {\n\t\tif (!connection.target) {\n\t\t\tvar newStar = new Star();\n\t\t\tstar.link(newStar, connection);\n\t\t\tnewStars.push(newStar);\n\t\t}\n\t}\n\t// 2. connect systems to existing neighbours\n\t// console.log(star.neighbours,oldStar);\n\tvar commonNeighbour = star.neighbours.left(oldStar).target;\n\tif (!commonNeighbour) throw ReferenceError(`${star} and ${oldStar} have no common neighbour on the left`);\n\tvar newNeighbour = star.neighbours.left(commonNeighbour).target;\n\tif (!newNeighbour) throw ReferenceError(`${star} has no neighbour to the left from common neighbour`);\n\tvar connectionToUse = commonNeighbour.neighbours.right(star);\n\tcommonNeighbour.link(newNeighbour, connectionToUse);\n\t//2.5\n\tvar a: number = commonNeighbour.neighbours.angleBetween(\n\t\tcommonNeighbour.neighbours.right(newNeighbour),\n\t\tnewNeighbour);\n\tvar newValue = randomInt(100 - a, Math.min(160 - a, 80));\n\tconsole.log(`setting new angle to ${newValue} to have triangle ${a} - ${newValue} - ${180 - a - newValue}`);\n\tnewDirection = new Direction(newNeighbour.neighbours.directionOf(commonNeighbour).add(newValue), newNeighbour);\n\tnewNeighbour.neighbours.add(newDirection);\n\t// console.log(`reused existing connection from ${commonNeighbour.name} to link to ${newNeighbour.name}`);\n\t// console.log(`got angles: ${measureAngle(star,commonNeighbour,newNeighbour)}, ${measureAngle(commonNeighbour,newNeighbour,star)}, ${measureAngle(newNeighbour,star,commonNeighbour)}`);\n\t// console.log('connecting',commonNeighbour.name,newNeighbour.name);\n\t// 2.\n\tvar commonNeighbour = star.neighbours.right(oldStar).target;\n\tif (!commonNeighbour) throw ReferenceError(`${star} and ${oldStar} have no common neighbour on the right`);\n\tvar newNeighbour = star.neighbours.right(commonNeighbour).target;\n\tif (!newNeighbour) throw ReferenceError(`${star} has no neighbour to the right from common neighbour`);\n\tvar connectionToUse = commonNeighbour.neighbours.left(star);\n\tcommonNeighbour.link(newNeighbour, connectionToUse);\n\t// 2.5\n\tvar a: number = commonNeighbour.neighbours.angleBetween(\n\t\tnewNeighbour,\n\t\tcommonNeighbour.neighbours.left(newNeighbour));\n\t// console.log('random number between',100-a,Math.min(160-a,80));\n\tvar newValue = randomInt(100 - a, Math.min(160 - a, 80));\n\tconsole.log(`setting new angle to ${newValue} to have triangle ${a} - ${newValue} - ${180 - a - newValue}`);\n\tnewDirection = new Direction(newNeighbour.neighbours.directionOf(commonNeighbour).add(-newValue), newNeighbour);\n\tnewNeighbour.neighbours.add(newDirection);\n\t// console.log(`reused existing connection from ${commonNeighbour.name} to link to ${newNeighbour.name}`);\n\t// console.log(`got angles: ${measureAngle(star,newNeighbour,commonNeighbour)}, ${measureAngle(commonNeighbour,star,newNeighbour)}, ${measureAngle(newNeighbour,commonNeighbour,star)}`);\n\t// console.log('connecting',commonNeighbour.name,newNeighbour.name);\n\t// 3. link new systems to each other\n\tfor (var leftStar of newStars) {\n\t\tvar leftDirection = star.neighbours.directionOf(leftStar);\n\t\tvar rightDirection = star.neighbours.right(leftDirection);\n\t\tvar rightStar = rightDirection.target;\n\t\tif (!rightStar) throw ReferenceError(`${star} has no neighbour to the right from ${leftStar}`);\n\t\tif (newStars.indexOf(rightStar) < 0) continue;\n\t\t// if(star.neighbours.left(rightStar).target!=leftStar) [leftStar, rightStar] = [rightStar, leftStar];\n\t\tif (star.neighbours.left(rightStar).target != leftStar) console.error('e0', leftStar, rightStar);\n\t\tif (leftDirection.target != leftStar) console.error('e1', leftDirection, leftStar);\n\t\tvar bisect = leftDirection.add(Math.round(leftDirection.angleTo(rightDirection) / 2));\n\t\t// var bisect = (leftDirection.value+rightDirection.value)/2;\n\t\t// if(leftDirection.value >90 && rightDirection.value<90) bisect+=180;\n\t\tconsole.log(`linking ${leftStar.name} and ${rightStar.name}`);\n\t\t// console.log(`bisect of ${leftDirection.value} and ${rightDirection.value} is ${bisect} (shold be ${(leftDirection.value+rightDirection.value)/2})`);\n\t\tleftStar.link(rightStar, bisect - 90);\n\t\t// console.log(`check: ${leftStar.neighbours.directionOf(rightStar).value} and ${rightStar.neighbours.directionOf(leftStar).value}`);\n\t\t// 3.5\n\t\tvar a: number = randomInt(20, 80);\n\t\tvar b = randomInt(100 - a, Math.min(160 - a, 80));\n\t\tif (180 - a - b < 20 || 180 - a - b > 80) console.error('e3', a, b);\n\t\tvar newDirection = new Direction(leftStar.neighbours.directionOf(rightStar).add(a), leftStar);\n\t\tleftStar.neighbours.add(newDirection);\n\t\tvar newDirection = new Direction(rightStar.neighbours.directionOf(leftStar).add(-b), rightStar);\n\t\trightStar.neighbours.add(newDirection);\n\t}\n\t// 4. add new (empty) connections\n\tfor (var newStar of newStars) {\n\t\tvar fromDirection = newStar.neighbours.next(newStar.neighbours.next(star));\n\t\tvar toDirection = newStar.neighbours.prev(newStar.neighbours.prev(star));\n\t\tvar degreesToSplit = fromDirection.positiveAngleTo(toDirection);\n\t\t// if(degreesToSplit<180) console.error('e2',newStar);\n\t\t// var minValue=randomInt(50,80);\n\t\t// var maxValue=degreesToSplit-randomInt(50,80);\n\t\t// console.log(`splitting for ${newStar.name}`, newStar.neighbours);\n\t\t// console.log(`filling between ${fromDirection.target.name} (${fromDirection.value}) and ${toDirection.target.name} (${toDirection.value})`);\n\t\t// console.log(`splitting ${degreesToSplit} from ${minValue} (${fromDirection.add(minValue)}) to ${maxValue} (${fromDirection.add(maxValue)})`);\n\t\tvar lastAdded = 0;\n\t\tfor (var newValue = randomInt(20, 80); newValue < degreesToSplit - 20; newValue += randomInt(20, 80)) {\n\t\t\tconsole.log(`got ${newValue} will be ${fromDirection.add(newValue)}`);\n\t\t\t// without second argument, 'link' adds direction without a target\n\t\t\t// newStar.neighbours.link(fromDirection.add(newValue));\n\t\t\tvar newDirection = new Direction(fromDirection.add(newValue), newStar);\n\t\t\tnewStar.neighbours.add(newDirection);\n\t\t\tlastAdded = newValue;\n\t\t}\n\t\tconsole.log(`loop done with ${(degreesToSplit - lastAdded)} gap`);\n\t\tif (degreesToSplit - lastAdded > 80) {\n\t\t\tnewValue = randomInt(lastAdded + 20, degreesToSplit - 20);\n\t\t\tconsole.log(`adding ${newValue} (will be ${fromDirection.add(newValue)}) to fill the gap`);\n\t\t\tnewDirection = new Direction(fromDirection.add(newValue), newStar);\n\t\t\tnewStar.neighbours.add(newDirection);\n\t\t}\n\t\t// console.log(`also ${newValue} will be ${fromDirection.add(newValue)}`);\n\t\t// fromDirection=new Direction(fromDirection.add(newValue), newStar);\n\t\t// newStar.neighbours.add(fromDirection);\n\t\t// console.log(`adding last ${maxValue} will be ${fromDirection.add(maxValue)}`);\n\t\t// newDirection=new Direction(fromDirection.add(maxValue), newStar);\n\t\t// newStar.neighbours.add(newDirection);\n\t\t// newStar.makePlanets();\n\t}\n\t//*\n\t// 5. clean up\n\tvar keepNeighbours = [star, star.neighbours.left(oldStar).target, star.neighbours.right(oldStar).target];\n\tfor (var oldConnection of oldStar.neighbours) {\n\t\tif (keepNeighbours.indexOf(oldConnection.target) < 0) {\n\t\t\toldConnection.target = undefined;\n\t\t}\n\t}\n\tstar.neighbours.left(oldStar).target.neighbours.left(oldStar).target = undefined;\n\tstar.neighbours.right(oldStar).target.neighbours.right(oldStar).target = undefined;\n\t//*/\n}\n\nexport interface Stats {\n\ts: number,\n\tp: number,\n\tjs: number,\n\tjf: number\n};\n\nexport var stats: Stats;\n\nexport interface SaveData {\n\tv: number;\n\ts: StarData;\n\tn: StarData[];\n\tf: {\n\t\tx: number;\n\t\ty: number;\n\t\tc: string | null;\n\t};\n\tst: Stats;\n}\n\nexport function saveUniverse(): SaveData {\n\treturn {\n\t\tv: 1,\n\t\ts: player_star.save(),\n\t\tn: Array.from(player_star.neighbours).map(n => (n.target as Star).save()),\n\t\tf: {\n\t\t\tx: flightplan.steps[0].x,\n\t\t\ty: flightplan.steps[0].y,\n\t\t\tc: flightplan.steps[0].cargo\n\t\t},\n\t\tst: stats,\n\t}\n}\n\nexport function loadUniverse(data: SaveData) {\n\tif (data.v != 1) return;\n\tplayer_star = new Star(data.s);\n\tvar newStars: Star[] = [];\n\tfor (var i = 0; i < data.n.length; i++) {\n\t\tvar newStar = new Star(data.n[i]);\n\t\tnewStars.push(newStar);\n\t\tplayer_star.link(newStar, data.s.n[i]);\n\t}\n\t// link neighbours to each other\n\tfor (var leftStar of newStars) {\n\t\tvar rightStar = player_star.neighbours.right(leftStar).target as Star;\n\t\tleftStar.neighbours.left(player_star).target = rightStar;\n\t\trightStar.neighbours.right(player_star).target = leftStar;\n\t}\n\tflightplan.init(data.f.x, data.f.y, data.f.c, document.getElementById('myFlightplan') as HTMLDivElement);\n\tstats = data.st;\n}\n\nexport function check() {\n\tvar ok = true;\n\tfor (var c of player_star.neighbours) {\n\t\tif (!c.target) {\n\t\t\tconsole.error('player_star has no neighbour at', c.value);\n\t\t\tok = false;\n\t\t\tcontinue;\n\t\t}\n\t\tif (Direction.normalize(c.value + 180) != c.target.neighbours.directionOf(player_star).value) {\n\t\t\tconsole.error('player_star and ... dont point to each other', c.target.name,\n\t\t\t\tDirection.normalize(c.value + 180), c.target.neighbours.directionOf(player_star).value\n\t\t\t);\n\t\t\tok = false;\n\t\t}\n\t\tif (player_star.neighbours.left(c).target != c.target.neighbours.right(player_star).target) {\n\t\t\tconsole.error('left (as seen from player_star) and right from ... dont match', c.target.name)\n\t\t\tok = false;\n\t\t}\n\t\tif (player_star.neighbours.right(c).target != c.target.neighbours.left(player_star).target) {\n\t\t\tconsole.error('right (as seen from player_star) and left from ... dont match', c.target.name);\n\t\t\tok = false;\n\t\t}\n\t\tvar dirToNextNeighbour = c.target.neighbours.next(player_star);\n\t\tvar nextNeighbour = dirToNextNeighbour.target;\n\t\tif (!nextNeighbour) {\n\t\t\tconsole.error('player_star has no neighbour after', c.target.name);\n\t\t\tok = false;\n\t\t\tcontinue;\n\t\t}\n\t\tif (nextNeighbour.neighbours.directionOf(c.target).value != Direction.normalize(dirToNextNeighbour.value + 180)) {\n\t\t\tconsole.error('neighbours dont point to each other', c.target.name, nextNeighbour.name,\n\t\t\t\tnextNeighbour.neighbours.directionOf(c.target).value, Direction.normalize(dirToNextNeighbour.value + 180));\n\t\t\tok = false;\n\t\t}\n\t\tif (measureAngle(c.target, c.target.neighbours.prev(nextNeighbour), nextNeighbour) +\n\t\t\tmeasureAngle(nextNeighbour, c.target, nextNeighbour.neighbours.next(c.target)) < 100) {\n\t\t\tconsole.error('future common neighbour of two neighbours will have bad angle', c.target.name, nextNeighbour.name,\n\t\t\t\t180 - measureAngle(c.target, c.target.neighbours.prev(nextNeighbour), nextNeighbour) -\n\t\t\t\tmeasureAngle(nextNeighbour, c.target, nextNeighbour.neighbours.next(c.target)));\n\t\t\tok = false;\n\t\t}\n\t\tvar badAngles = Array.from(c.target.neighbours).map((x) => x.angleTo(c.target.neighbours.next(x))).filter(x => Math.abs(x) < 20 || Math.abs(x) > 80);\n\t\tif (badAngles.length) {\n\t\t\tconsole.error('neighbour has bad angles', c.target.name, badAngles);\n\t\t\tok = false;\n\t\t}\n\t\t// if(!ok) return ok;\n\t}\n\tvar badAngles = Array.from(player_star.neighbours).map((x) => x.angleTo(player_star.neighbours.next(x))).filter(x => Math.abs(x) < 20 || Math.abs(x) > 80);\n\tif (badAngles.length) {\n\t\tconsole.error('player_star has bad angles');\n\t\tok = false;\n\t}\n\treturn ok;\n}\n", "import { Direction, Directions } from \"./angle.js\";\nimport { cell_size, portal_pad, portal_size, planet_size, portals_ext } from \"./draw.js\";\nimport { flightplan } from \"./flightplan.js\";\nimport { mode, redraw } from \"./index.js\";\nimport { Planet } from \"./planets.js\";\nimport { Star } from \"./stars.js\";\nimport { player_star } from \"./universe.js\";\n\nexport var shown_star: Star;\n\nexport function set_shown_star(x: Star) { shown_star = x };\n\n// var grid=[];\nvar hintTarget: HTMLElement;\nvar visibleStar: Star;\n\nexport function setupHints(star: Star, canvas: HTMLCanvasElement, hintTargetObj: HTMLElement) {\n\tvisibleStar = star;\n\tcanvas.onmousemove = hint;\n\thintTarget = hintTargetObj;\n\tcanvas.onmouseleave = function () { hintTarget.innerText = 'Hover an object on the map to see what it is' };\n\tcanvas.onclick = click;\n}\n\nfunction hintText(obj: Direction | Star | Planet): string[] {\n\tif (obj instanceof Direction) {\n\t\tif (!obj.target) return ['Portal to unknown' + (mode == 'test' ? ' at' + obj.value : '')];\n\t\tvar ret = ['Portal to ' + hintText(obj.target) + (mode == 'test' ? ' at' + obj.value : '')];\n\t\tif (mode == 'flyi') return ret;\n\t\tif (shown_star == player_star) {\n\t\t\tif (Math.abs(obj.x - flightplan.steps[0].x) < 0.001 &&\n\t\t\t\tMath.abs(obj.y - flightplan.steps[0].y) < 0.001) {\n\t\t\t\tret.push('(you are here)');\n\t\t\t} else {\n\t\t\t\tvar reason = flightplan.cantJumpTo(obj.target, obj);\n\t\t\t\tif (reason) ret.push(\"You can't travel there: \" + reason);\n\t\t\t\telse ret.push(\"You can travel there\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (obj.target == player_star) ret = ret.concat(['(you are there)', 'Click to return']);\n\t\t\telse if (obj.target.visited) ret.push(\"(you've been there before)\");\n\t\t}\n\t\tif (obj.target != player_star) {\n\t\t\tret.push('Click to explore');\n\t\t}\n\t\treturn ret;\n\t} else if (obj instanceof Planet) {\n\t\tvar ret = [obj.name + ' planet'];\n\t\tif (obj.buys) ret.push('Buys: ' + obj.buys);\n\t\tif (obj.sells) ret.push('Sells: ' + obj.sells);\n\t\tif (shown_star == player_star && mode != 'flyi') {\n\t\t\tvar reason = flightplan.cantTravelTo(obj);\n\t\t\tif (flightplan.lastStep.planet == obj) {\n\t\t\t\tret.push('Click to remove it from the flight plan');\n\t\t\t} else if (reason) {\n\t\t\t\tret.push(`Can't travel there: ${reason}`);\n\t\t\t} else {\n\t\t\t\tret.push('Click to add it to the flight plan');\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t} else if (obj instanceof Star) {\n\t\treturn [obj.name + ' star'];\n\t}\n\treturn ['Unknown object'];\n}\n\nfunction objAt(x: number, y: number, event: MouseEvent): Star | Planet | Direction | undefined {\n\tvar cell_x = Math.floor(x / cell_size - portal_pad);\n\tvar cell_y = Math.floor(y / cell_size - portal_pad);\n\t// console.log(cell_x,cell_y);\n\tif (cell_x < 0 || cell_x >= visibleStar.size ||\n\t\tcell_y < 0 || cell_y >= visibleStar.size) {\n\t\t// in portal area\n\t\tvar radius = portal_size / cell_size;\n\t\tfor (var neighbour of visibleStar.neighbours) {\n\t\t\tvar dist = Math.hypot(x / cell_size - neighbour.x - portal_pad,\n\t\t\t\ty / cell_size - neighbour.y - portal_pad);\n\t\t\t// console.log(dist,radius);\n\t\t\tif (dist < radius) {\n\t\t\t\t// console.log(neighbour.getText().join('<br>'));\n\t\t\t\treturn neighbour;\n\t\t\t}\n\t\t}\n\t}\n\tif (!visibleStar.grid[cell_x]) return undefined;\n\tvar obj = visibleStar.grid[cell_x][cell_y];\n\tif (!obj) return undefined;\n\t// console.log(obj);\n\tvar radius = planet_size;\n\tvar dist = Math.hypot(event.offsetX - (obj.x + 1 * portals_ext + portal_pad) * cell_size, event.offsetY - (obj.y + 1 * portals_ext + portal_pad) * cell_size);\n\tif (dist < radius) {\n\t\treturn obj;\n\t}\n}\n\nfunction hint(event: MouseEvent) {\n\tconst obj = objAt(event.offsetX, event.offsetY, event);\n\thintTarget.innerHTML = obj ? hintText(obj).join('<br>') : \"Space void\";\n}\n\nfunction click(event: MouseEvent) {\n\tif (mode == 'flyi') return;\n\tconst obj = objAt(event.offsetX, event.offsetY, event);\n\tif (obj instanceof Planet && shown_star == player_star) {\n\t\tif (flightplan.steps.findIndex(x => x.planet == obj) == flightplan.steps.length - 1) {\n\t\t\tflightplan.undo();\n\t\t\tredraw();\n\t\t\tflightplan.element.parentElement.scrollTop = 1000;\n\t\t} else if (!flightplan.cantTravelTo(obj)) {\n\t\t\tflightplan.add(obj);\n\t\t\tredraw();\n\t\t\tflightplan.element.parentElement.scrollTop = 1000;\n\t\t}\n\t}\n\tif (obj instanceof Direction && obj.target) {\n\t\tshown_star = obj.target;\n\t\tredraw();\n\t\thint(event);\n\t}\n\treturn;\n}\n", "import { Direction } from \"./angle.js\";\nimport { planet_size, cell_size, portal_pad } from \"./draw.js\";\nimport { intersect, lineCrossesObj } from \"./geometry.js\";\nimport { shown_star } from \"./hints.js\";\nimport { gebi, mode } from \"./index.js\";\nimport { Planet } from \"./planets.js\";\nimport { Star } from \"./stars.js\";\nimport { player_star } from \"./universe.js\";\n\ninterface flightplanFirstStep {\n\tstart: true,\n\tplanet: { x: number, y: number },\n\tx: number, y: number,\n\tbuy: false,\n\tsell: false,\n\tcargo: string | null,\n}\n\ninterface flightplanStep {\n\tstart: false,\n\tplanet: Planet,\n\tx: number, y: number,\n\tbuy: boolean,\n\tsell: boolean,\n\tcargo: string | null,\n}\n\nclass Flightplan {\n\tsteps: Array<flightplanFirstStep | flightplanStep>;\n\texitPortal: Direction | null;\n\t// visited:[],\n\telement: HTMLElement;\n\tinit(x: number, y: number, cargo: string | null, element: HTMLDivElement) {\n\t\tthis.element = element;\n\t\tthis.exitPortal = null;\n\t\tthis.steps = [{\n\t\t\tstart: true,\n\t\t\tplanet: { x: x, y: y },\n\t\t\tx: x, y: y,\n\t\t\tbuy: false,\n\t\t\tsell: false,\n\t\t\tcargo: cargo,\n\t\t} as flightplanFirstStep];\n\t};\n\tadd(planet: Planet) {\n\t\tconst oldIndex = this.steps.findIndex(x => x.planet == planet);\n\t\t// if(oldIndex == flightplan.steps.length-1) this.undo();\n\t\tif (oldIndex >= 0) return;\n\t\t// if(this.visited.indexOf(planet)>-1) return;\n\t\t// this.visited.push(planet);\n\t\tvar cargo = this.lastStep.cargo;\n\t\tthis.steps.push({\n\t\t\tstart: false,\n\t\t\tplanet: planet,\n\t\t\tx: planet.x,\n\t\t\ty: planet.y,\n\t\t\tbuy: false,\n\t\t\tsell: false,\n\t\t\tcargo: cargo,\n\t\t} as flightplanStep);\n\t\tthis.updateStep(this.steps.length - 1);\n\t};\n\tundo() {\n\t\t// don't remove first element - it's an initial state - how player arrived to this system\n\t\tif (this.steps.length <= 1) return;\n\t\tthis.steps.pop();\n\t};\n\tcanSell(i: number) {\n\t\tconst step = this.steps[i] as flightplanStep;\n\t\treturn !!step.planet.buys && this.steps[i - 1].cargo == step.planet.buys;\n\t};\n\tsetSell(i: number, value: boolean, dontUpdate: boolean) {\n\t\tif (value && !this.canSell(i)) return;\n\t\tvar step = this.steps[i];\n\t\tstep.sell = value;\n\t\tif (!dontUpdate) this.updateStep(i, true, true);\n\t};\n\tcanBuy(i: number) {\n\t\tconst step = this.steps[i] as flightplanStep;\n\t\treturn !!step.planet.sells && (!this.steps[i - 1].cargo || this.steps[i].sell);\n\t};\n\tsetBuy(i: number, value: boolean, dontUpdate: boolean) {\n\t\tif (value && !this.canBuy(i)) return;\n\t\tconst step = this.steps[i] as flightplanStep;\n\t\tstep.buy = value;\n\t\tif (!dontUpdate) this.updateStep(i, true);\n\t}\n\tupdateStep(i: number, changed?: boolean, noAutoSell?: boolean) {\n\t\t// RECURSIVE\n\t\tif (i >= this.steps.length) return;\n\t\t// console.log('updateStep',i,changed);\n\t\tconst step = this.steps[i] as flightplanStep;\n\t\tif (noAutoSell) {\n\t\t\t// only disables sale if it's impossible\n\t\t\tif (step.sell && !this.canSell(i)) {\n\t\t\t\tstep.sell = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// set sell to its possible value\n\t\t\tif (step.sell != this.canSell(i)) {\n\t\t\t\tstep.sell = this.canSell(i);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif (step.buy && !this.canBuy(i)) {\n\t\t\tstep.buy = false;\n\t\t\tchanged = true;\n\t\t}\n\t\tvar new_cargo = step.buy ? step.planet.sells : step.sell ? '' : this.steps[i - 1].cargo;\n\t\tchanged = changed || step.cargo != new_cargo;\n\t\tstep.cargo = new_cargo;\n\t\tif (changed) {\n\t\t\tthis.updateStep(i + 1);\n\t\t}\n\t};\n\tcountJobs() {\n\t\t// count all \"sell\" actions\n\t\treturn this.steps.reduce((a: number, step: flightplanFirstStep | flightplanStep) => a += +step.sell, 0);\n\t};\n\tget lastStep() {\n\t\tconst ret = this.steps.at(-1);\n\t\tif (!ret) throw new ReferenceError(\"flighplan should never be empty\");\n\t\treturn ret;\n\t}\n\tcanPathTo(obj: Planet | Direction) {\n\t\tfor (var i = 1; i < this.steps.length - 1; i++) {\n\t\t\tif (intersect(this.steps[i - 1].planet, this.steps[i].planet,\n\t\t\t\tthis.lastStep.planet, obj))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\tpathToCollidesWith(obj: Planet | Direction): string | false {\n\t\tif (lineCrossesObj(this.lastStep.planet, obj, player_star, 0.5)) return 'star';\n\t\tvar size = planet_size / cell_size;\n\t\t// console.log(obj,this.steps.at(-1).planet);\n\t\tfor (var planet of player_star.planets) {\n\t\t\tif (planet != obj && planet != this.lastStep.planet &&\n\t\t\t\tlineCrossesObj(this.lastStep.planet, obj, planet, size)) return planet.name + ' planet';\n\t\t}\n\t\treturn false;\n\t};\n\tcantTravelTo(planet: Planet) {\n\t\tif (this.steps.findIndex(x => x.planet == planet) >= 0) return 'planet already in flight plan';\n\t\tif (mode == 'easy') return false;\n\t\tif (!this.canPathTo(planet)) return 'crosses existing path';\n\t\tvar name = this.pathToCollidesWith(planet);\n\t\tif (name) return 'path crosses ' + name;\n\t\treturn false;\n\t};\n\tcantJumpTo(star: Star, direction: Direction) {\n\t\tif (star == player_star) return \"you're currently at this star\";\n\t\tif (star.visited) return \"you've already been here\";\n\t\tif (mode == 'easy') return false;\n\t\tif (!this.canPathTo(direction)) return \"path to portal crosses existing path\";\n\t\tvar name = this.pathToCollidesWith(direction);\n\t\tif (name) return 'path crosses ' + name;\n\t\treturn false;\n\t};\n\ttoXY(): [number, number][] {\n\t\tvar ret: [number, number][] = flightplan.steps.map(step => [step.x, step.y]);\n\t\tif (flightplan.exitPortal) {\n\t\t\tret.push([flightplan.exitPortal.x, flightplan.exitPortal.y]);\n\t\t}\n\t\treturn ret;\n\t}\n\ttoKeyFrames(): string {\n\t\tvar xy = this.toXY();\n\t\tvar lengths = xy.map((v: [number, number], i: number, arr) => {\n\t\t\tif (i == 0) return 0;\n\t\t\treturn Math.hypot(v[0] - arr[i - 1][0], v[1] - arr[i - 1][1]);\n\t\t});\n\t\tvar distanceFromStart: number[] = [0];\n\t\tfor (var i = 1; i < lengths.length; i++) {\n\t\t\tdistanceFromStart[i] = distanceFromStart[i - 1] + lengths[i];\n\t\t}\n\t\tvar totalLength = distanceFromStart.at(-1) || 0;\n\t\tvar prc = distanceFromStart.map(v => Math.round(v / totalLength * 100));\n\t\tvar ret = prc.map((v, i) => `${prc[i]}% { left:${(xy[i][0] + portal_pad) * cell_size + 2}px; top:${(xy[i][1] + portal_pad) * cell_size + 2}px }`);\n\t\treturn ret.join(' ');\n\n\n\t}\n}\n\nexport var flightplan = new Flightplan();\n\nexport function redrawFlightplan() {\n\tvar html = flightplan.steps.map((step, i) => {\n\t\tvar ret: string[] = [];\n\t\tif (step.start) {\n\t\t\tstep = step as flightplanFirstStep;\n\t\t\tret.push(`Arrived to <b>${player_star.name} star</b>` + (step.cargo ? ` with ${step.cargo}` : ''));\n\t\t} else {\n\t\t\tstep = step as flightplanStep;\n\t\t\tret.push(`<div><b>${i}: ${step.planet.name} planet</b>`);\n\t\t\tif (step.planet.buys) ret.push(`<label><input type=\"checkbox\" ${step.sell ? 'checked' : ''} ${flightplan.canSell(i) ? '' : 'disabled'} onchange=\"flightplan.setSell(${i},this.checked);redrawFlightplan()\"> Sell ${step.planet.buys}</label>`);\n\t\t\tif (step.planet.sells) ret.push(`<label><input type=\"checkbox\" ${step.buy ? 'checked' : ''} ${flightplan.canBuy(i) ? '' : 'disabled'} onchange=\"flightplan.setBuy(${i},this.checked);redrawFlightplan()\"> Buy ${step.planet.sells}</label>`);\n\t\t\tret.push(`</div>`);\n\t\t\tif (step.cargo) ret.push(`Travel with ${step.cargo}`);\n\t\t\telse ret.push(`Travel empty`);\n\t\t}\n\t\treturn ret.join(' ');\n\t}).join(' ');\n\tflightplan.element.innerHTML = html;\n\tgebi('fp_undo').style.display = flightplan.steps.length <= 1 ? 'none' : '';\n\tgebi('fp_hint').style.display = (shown_star == player_star) ? '' : 'none';\n\n\tgebi('fp_jobs_done').innerText = '' + flightplan.countJobs();\n\tgebi('fp_jobs_total').innerText = '' + player_star.jobs;\n\t// document.getElementById('fp_jobs_prc').innerText=Math.round(flightplan.countJobs()/player_star.jobs*100);\n\n\tgebi('fp_jump').style.display = (shown_star == player_star) ? 'none' : '';\n\tif (shown_star != player_star) {\n\t\tvar reason = flightplan.cantJumpTo(shown_star, player_star.neighbours.directionOf(shown_star));\n\t\tgebi('fp_jump_ok').style.display = reason ? 'none' : '';\n\t\tgebi('fp_jump_ok_star').innerText = shown_star.name + ' star';\n\t\tgebi('fp_jump_ok_jobs').innerText = '' + shown_star.jobs;\n\t\tgebi('fp_jump_no').style.display = reason ? '' : 'none';\n\t\tgebi('fp_jump_no_reason').innerText = reason || '';\n\t}\n}\n", "import { Direction } from \"./angle.js\";\nimport { flightplan } from \"./flightplan.js\";\nimport { gebi } from \"./index.js\";\nimport { Planet } from \"./planets.js\";\nimport { Star } from \"./stars.js\";\nimport { player_star } from \"./universe.js\";\n\nexport var planet_size = 0;\nexport var cell_size = 0;\nexport var portal_size = 0;\n\n// flag: if portals has are located outside of \"planet area\" (1)\n// or same row/column as top-/bottom-/left-/right-most planets (0)\nexport var portals_ext = 0;\n\n// extra space to reserve for portals\nexport const portal_pad = 0.5;\n\nfunction draw_planet(ctx: CanvasRenderingContext2D, planet: Planet) {\n\tconst x = (planet.x + 1 * portals_ext + portal_pad) * cell_size;\n\tconst y = (planet.y + 1 * portals_ext + portal_pad) * cell_size;\n\tvar grd = ctx.createRadialGradient(x - 1, y - 1, 2, x, y, planet_size);\n\tgrd.addColorStop(0, planet.color_in);\n\tgrd.addColorStop(1, planet.color_out);\n\tctx.fillStyle = grd;\n\tctx.beginPath();\n\tctx.arc(x, y, planet_size, 0, 6);\n\tctx.fill();\n}\n\nfunction draw_portal(ctx: CanvasRenderingContext2D, neighbour: Direction) {\n\tvar x = (neighbour.x + portal_pad) * cell_size;\n\tvar y = (neighbour.y + portal_pad) * cell_size;\n\n\tif (neighbour.target == player_star) draw_player_there(ctx, x, y, neighbour.value);\n\n\tctx.strokeStyle = 'purple';\n\tif (neighbour.target) ctx.strokeStyle = 'violet';\n\tctx.lineWidth = 3;\n\tvar perimeter = Math.PI * portal_size;\n\tvar dashes_count = Math.round(perimeter / 3);\n\tvar dashes_length = perimeter / dashes_count;\n\tctx.setLineDash([dashes_length, dashes_length]);\n\tctx.beginPath();\n\tctx.arc(x, y, portal_size, 0, 7);\n\t// if(neighbour.target==player_star){\n\t// \tctx.fillStyle = 'purple';\n\t// \tctx.fill();\n\t// }\n\tctx.stroke();\n}\n\nfunction draw_player_here(ctx: CanvasRenderingContext2D, x: number, y: number) {\n\tgebi('player_here').style.display = '';\n\tconst scale = 2;\n\tconst size = (portal_size * 2 + 2) * scale;\n\tgebi('player_here').style.left = (x - size / 2 + 2) + 'px';\n\tgebi('player_here').style.top = (y - size / 2 + 2) + 'px';\n\tgebi('player_here').style.width = size + 'px';\n\tgebi('player_here').style.height = size + 'px';\n}\n\nfunction draw_player_there(ctx: CanvasRenderingContext2D, x: number, y: number, angle: number) {\n\t// x=(x+portal_pad)*cell_size;\n\t// y=(y+portal_pad)*cell_size;\n\tconst r = portal_size * 1.73; // sqrt(3)\n\tconst point_x = function (a: number) { return r * Math.cos((a + angle) / 180 * Math.PI) + x; }\n\tconst point_y = function (a: number) { return -r * Math.sin((a + angle) / 180 * Math.PI) + y; }\n\tconst side = r * 3.46;// 6/sqrt(3)\n\tconst height = r * 3;// side*sqrt(3)/2\n\tctx.strokeStyle = 'purple';\n\tctx.lineWidth = 4;\n\tctx.setLineDash([1, 0]);\n\tctx.beginPath();\n\tconst s = 150;\n\tconst t = 120;\n\tctx.moveTo(point_x(s), point_y(s));\n\tctx.lineTo(point_x(t), point_y(t));\n\tctx.lineTo(point_x(0), point_y(0));\n\tctx.lineTo(point_x(-t), point_y(-t));\n\tctx.lineTo(point_x(-s), point_y(-s));\n\t// ctx.moveTo(point_x(0), point_y(0));\n\t// ctx.lineTo(point_x(t), point_y(t));\n\t// ctx.lineTo(point_x(-t), point_y(-t));\n\t// ctx.lineTo(point_x(0), point_y(0));\n\tctx.stroke();\n}\n\nexport function draw_star(ctx: CanvasRenderingContext2D, star: Star) {\n\tvar max_size = ctx.canvas.width;\n\tcell_size = max_size / (star.size + 2 * portals_ext + 2 * portal_pad);\n\tplanet_size = cell_size / 5;\n\tportal_size = portal_pad * cell_size / 5;\n\tvar center = max_size / 2;\n\tif (star.bright) {\n\t\tvar grd = ctx.createRadialGradient(center, center, 0, center, center, cell_size / 2);\n\t\tgrd.addColorStop(0, \"white\");\n\t\tgrd.addColorStop(0.5, star.color);\n\t\tgrd.addColorStop(1, \"black\");\n\t\tctx.fillStyle = grd;\n\t\tctx.fillRect(0, 0, max_size, max_size);\n\t} else {\n\t\tvar grd = ctx.createRadialGradient(center, center, 10, center, center, cell_size / 2);\n\t\tgrd.addColorStop(0, star.color);\n\t\tgrd.addColorStop(1, \"black\");\n\t\tctx.fillStyle = grd;\n\t\tctx.fillRect(0, 0, max_size, max_size);\n\t}\n\tif (star == player_star) {\n\t\t// TODO: use flightplan.toXY here\n\t\tctx.beginPath();\n\t\tvar x0 = (flightplan.steps[0].x + portal_pad) * cell_size;\n\t\tvar y0 = (flightplan.steps[0].y + portal_pad) * cell_size;\n\t\tctx.moveTo(x0, y0);\n\t\tfor (var i = 1; i < flightplan.steps.length; i++) {\n\t\t\tvar x = (flightplan.steps[i].x + portal_pad) * cell_size;\n\t\t\tvar y = (flightplan.steps[i].y + portal_pad) * cell_size;\n\t\t\tctx.lineTo(x, y);\n\t\t}\n\t\tif (flightplan.exitPortal) {\n\t\t\tvar x = (flightplan.exitPortal.x + portal_pad) * cell_size;\n\t\t\tvar y = (flightplan.exitPortal.y + portal_pad) * cell_size;\n\t\t\tctx.lineTo(x, y);\n\t\t}\n\t\tctx.strokeStyle = 'purple';\n\t\tctx.setLineDash([6, 6]);\n\t\tctx.lineWidth = 3;\n\t\tctx.stroke();\n\n\t\tdraw_player_here(ctx, x0, y0);\n\t} else {\n\t\tgebi('player_here').style.display = 'none';\n\t\t// const directionToPlayer=shown_star.neighbours.directionOf(player_star);\n\t\t// draw_player_there(ctx,directionToPlayer.x,directionToPlayer.y,directionToPlayer.value);\n\t}\n\tfor (var planet of star.planets) {\n\t\tdraw_planet(ctx, planet);\n\t}\n\tfor (var neighbour of star.neighbours) {\n\t\tdraw_portal(ctx, neighbour);\n\t}\n}\n", "import { default as PocketBase, RecordAuthResponse } from \"../pocketbase/pocketbase.es.mjs\";\nimport { draw_star } from \"./draw.js\";\nimport { flightplan, redrawFlightplan } from \"./flightplan.js\";\nimport { setupHints, set_shown_star, shown_star } from \"./hints.js\";\nimport { check, default_universe, loadUniverse, moveToNewStar, player_star, SaveData, saveUniverse, set_player_star, stats } from \"./universe.js\";\n\nimport textFit from '../textFit/textFit.js';\n\nexport function gebi(id: string) {\n    const element = document.getElementById(id);\n    if (!element) throw ReferenceError(`element ${id} not found`);\n    return element;\n}\nexport function gibi(id: string) {\n    const element = gebi(id);\n    if (!(element instanceof HTMLInputElement)) throw ReferenceError(`element ${id} is not input`);\n    return element;\n}\n\nexport var mode: string;\n\nvar c = gebi(\"myCanvas\") as HTMLCanvasElement;\nvar ctx = c.getContext(\"2d\") as CanvasRenderingContext2D;\n\nvar real_savegame_id: string;\nvar flyi_time: number;\nvar flyi_finish: number;\nvar flyi_interval: number;\nif (location.hostname == 'localhost') {\n    flyi_time = 1000 * 60 * 10; //10min\n} else {\n    flyi_time = 1000 * 60 * 60 * 10; //10h\n}\nexport function redraw() {\n    draw_star(ctx, shown_star);\n    setupHints(shown_star, c, gebi('hints'));\n    redrawFlightplan();\n    gebi('mapTitle_player').style.display = (shown_star == player_star) ? '' : 'none';\n    gebi('mapTitle_neighbour').style.display = (shown_star == player_star) ? 'none' : '';\n    if (shown_star != player_star) {\n        gebi('mapTitle_neighbour_n').innerText = '' + (player_star.neighbours.indexOf(shown_star) + 1);\n        gebi('mapTitle_neighbour_total').innerText = '' + player_star.neighbours.count;\n    }\n    gebi('stats_s').innerText = '' + stats.s;\n    gebi('stats_p').innerText = '' + stats.p;\n    gebi('stats_js').innerText = '' + stats.js;\n    gebi('stats_jf').innerText = '' + stats.jf;\n    gebi('stats_jf_s').innerText = '' + Math.round(stats.jf / stats.s * 100) / 100;\n    gebi('stats_jf_p').innerText = '' + Math.round(stats.jf / stats.p * 100);\n    gebi('stats_jf_js').innerText = '' + Math.round(stats.jf / stats.js * 100);\n    // gebi('stats_mr').innerText=stats.mr;\n    // gebi('stats_mrc').innerText=stats.mrc;\n    // gebi('stats_mrc_show').style.display=stats.mrc>1?'':'none';\n}\n\nwindow.onhashchange = async function () {\n    document.querySelectorAll('dialog[open]').forEach(x => (x as HTMLDialogElement).close())\n    gebi('main').style.display = 'none';\n    flyi_switch(false);\n    gebi('profile').style.display = 'none';\n\n    mode = location.hash.slice(1);\n    if (['test', 'easy', 'hard', 'real'].indexOf(mode) == -1) {\n        history.replaceState(0, '', location.pathname);\n        (gebi('select_mode') as HTMLDialogElement).showModal();\n        return;\n    }\n    document.title = `space2d2 - ${mode} mode`;\n\n    save_game = simple_save_game;\n\n    if (mode == 'test') return start_game(JSON.parse(default_universe));\n    if (['easy', 'hard'].indexOf(mode) > -1) return start_game(JSON.parse(localStorage['space2d2' + mode] || default_universe));\n\n    // REAL mode\n\n    const m = await import('../pocketbase/pocketbase.es.mjs'); //TODO: error\n    const PocketBase = m.default;\n    var pb: PocketBase;\n    if (location.hostname == 'localhost') {\n        pb = new PocketBase('http://127.0.0.1:8090');\n    } else {\n        pb = new PocketBase('/');\n    }\n    window.pb = pb;\n\n    save_game = async function () {\n        console.log('real mode save_game');\n        // TODO: error checking\n        if (real_savegame_id) {\n            pb.collection('real').update(real_savegame_id, {\n                data: saveUniverse(),\n            });\n        } else {\n            var r = await pb.collection('real').create({\n                user: pb.authStore.model.id,\n                data: saveUniverse(),\n            });\n            real_savegame_id = r.id;\n        }\n    };\n\n    pb.collection('users').authRefresh({}, { expand: 'real(user)' }).then(\n        start_real_game,\n        () => setup_login_flow(pb));\n}\n\nfunction setup_login_flow(pb: PocketBase) {\n    window.login = function () {\n        pb.collection('users').authWithPassword(\n            gibi('login_email').value,\n            gibi('login_password').value,\n            {}, { expand: 'real(user)' }\n        ).then((r) => {\n            (gebi('login') as HTMLDialogElement).close();\n            start_real_game(r);\n        }, (e) => {\n            console.log(e);\n            gibi('login_failure').style.display = '';\n            gibi('login_details').innerText = JSON.stringify(e.response, null, 2);\n        });\n    };\n    window.register = function () {\n        pb.collection('users').create({\n            email: gibi('register_email').value,\n            emailVisibility: true,\n            password: gibi('register_password').value,\n            passwordConfirm: gibi('register_password').value,\n        }).then(async (r) => {\n            gibi('login_email').value = gibi('register_email').value;\n            gibi('login_password').value = gibi('register_password').value;\n            (gebi('register') as HTMLDialogElement).close();\n            (gebi('register_to_login') as HTMLDialogElement).showModal();\n        }, (e) => {\n            console.log(e);\n            gebi('register_failure').style.display = '';\n            gebi('register_details').innerText = JSON.stringify(e.response, null, 2);\n        });\n    };\n    (gebi('login') as HTMLDialogElement).showModal();\n}\n\nfunction start_real_game(r: RecordAuthResponse) {\n    const ex = r.record.expand['real(user)'];\n    gebi('profile').style.display = '';\n    gebi('profile_name').innerText = r.record.email;\n    gebi('profile_id').innerText = r.record.id;\n    if (!ex || !ex.data) {\n        return start_game(JSON.parse(default_universe));\n    }\n    real_savegame_id = ex.id;\n    flyi_finish = new Date(ex.updated).getTime() + flyi_time;\n    if (flyi_finish <= new Date().getTime()) {\n        return start_game(ex.data);\n    }\n    start_game(ex.data);\n    flyi_switch(true);\n}\n\nfunction flyi_step() {\n    const flyi_remain = flyi_finish - new Date().getTime();\n    (gebi('flyi_time').firstChild as HTMLSpanElement).innerText = '' + new Date(flyi_remain).toISOString().substring(11, 19);\n    if (flyi_remain <= 1000) flyi_switch(false);\n}\n\nfunction flyi_switch(on: boolean) {\n    gebi('mapTitle_flying').style.display = on ? '' : 'none';\n    gebi('mapTitle_player').style.display = on ? 'none' : '';\n    gebi('fpTitle_normal').style.display = on ? 'none' : '';\n    gebi('fpTitle_flyi').style.display = on ? '' : 'none';\n    gebi('myFlightplan').style.display = on ? 'none' : '';\n    gebi('fp_hint').style.display = on ? 'none' : '';\n    gebi('fp_flyi').style.display = on ? '' : 'none';\n    gebi('player_here').style.display = on ? 'none' : '';\n    mode = on ? 'flyi' : 'real';\n    if (on) {\n        textFit(gebi('flyi_time'), { detectMultiLine: false, widthOnly: true });\n        gebi('flyi_cargo_with').style.display = flightplan.steps[0].cargo ? '' : 'none';\n        gebi('flyi_cargo').innerText = flightplan.steps[0].cargo || '';\n        flyi_interval = setInterval(flyi_step, 1000);\n        flyi_step();\n    } else {\n        clearInterval(flyi_interval);\n    }\n}\n\nfunction start_game(universe: SaveData) {\n    gebi('main').style.display = 'flex';\n    loadUniverse(universe);\n    if (!check())\n        alert('universe error, check console');\n    set_shown_star(player_star);\n    redraw();\n}\n\nvar save_game: () => void;\n\nvar simple_save_game = function () {\n    localStorage['space2d2' + mode] = JSON.stringify(saveUniverse());\n};\n\nfunction jump_start() {\n    if (shown_star == player_star) return;\n    if (shown_star.visited) return;\n    stats.s++;\n    stats.p += flightplan.steps.length - 1;\n    stats.jf += flightplan.countJobs();\n    stats.js += player_star.jobs;\n    console.clear();\n    const target_star = shown_star;\n    // draw old player star before moveToNewStar turns some portals disabled\n    set_shown_star(player_star);\n    flightplan.exitPortal = player_star.neighbours.directionOf(target_star);\n    redraw();\n    gebi('player_travel_css').innerHTML = `@keyframes player_travel {${flightplan.toKeyFrames()}}`;\n    gebi('player_here').style.display = 'none';\n    // update game state and maybe save it\n    moveToNewStar(target_star, player_star);\n    var lastCargo = flightplan.lastStep.cargo;\n    var direction = target_star.neighbours.directionOf(player_star);\n    flightplan.init(direction.x, direction.y, lastCargo, gebi('myFlightplan') as HTMLDivElement);\n    player_star.visited = true;\n    set_player_star(target_star);\n    if (!check()) alert('universe error, check console');\n    if (mode != 'real' || stats.s != 1) {\n        save_game();\n        flyi_finish = new Date().getTime() + flyi_time;\n    }\n    // start animation\n    gebi('player_travel').style.display = '';\n    gebi('player_travel').onanimationend = jump_end;\n}\n\nfunction jump_end() {\n    gebi('player_travel').style.display = 'none';\n    set_shown_star(player_star);\n    redraw();\n    if (mode != 'real') return;\n    // for REAL mode\n    if (stats.s == 1) {\n        return (gebi('real_nosave') as HTMLDialogElement).showModal();\n    }\n    save_game();\n    flyi_switch(true);\n}\n\nfunction jump() {\n    if (shown_star == player_star) return;\n    if (shown_star.visited) return;\n    stats.s++;\n    stats.p += flightplan.steps.length - 1;\n    stats.jf += flightplan.countJobs();\n    stats.js += player_star.jobs;\n    console.clear();\n    moveToNewStar(shown_star, player_star);\n    var lastCargo = flightplan.lastStep.cargo;\n    var direction = shown_star.neighbours.directionOf(player_star);\n    flightplan.init(direction.x, direction.y, lastCargo, gebi('myFlightplan') as HTMLDivElement);\n    player_star.visited = true;\n    set_player_star(shown_star);\n    if (!check()) alert('universe error, check console');\n    redraw();\n    if (mode != 'real') {\n        return save_game();\n    }\n    // for REAL mode\n    if (stats.s == 1) {\n        return (gebi('real_nosave') as HTMLDialogElement).showModal();\n    }\n    save_game()\n    flyi_finish = new Date().getTime() + flyi_time;\n    flyi_switch(true);\n}\n\nwindow.onhashchange();\n\nwindow.jump = jump_start;\nwindow.redraw = redraw;\nwindow.flightplan = flightplan;\nwindow.redrawFlightplan = redrawFlightplan;\nwindow.set_shown_star = set_shown_star;\nwindow.get_shown_star = () => shown_star;\nwindow.player_star = player_star;\nwindow.get_player_star = () => player_star;\n\n\nif (location.hostname == 'localhost') {\n    new EventSource('/esbuild').addEventListener('change', () => location.reload());\n}"],
  "mappings": "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",
  "names": ["require_textFit", "__commonJSMin", "exports", "module", "root", "factory", "defaultSettings", "els", "options", "settings", "key", "elType", "i", "processItem", "el", "isElement", "innerSpan", "originalHeight", "originalHTML", "originalWidth", "low", "mid", "high", "innerWidth", "innerHeight", "hasClass", "multiLine", "size", "innerSpanBoundingClientRect", "addStyleSheet", "height", "style", "o", "element", "cls", "css", "normVector", "x", "y", "d", "scalarMul", "v1", "v2", "dotOnLine", "a", "b", "p", "v", "m", "lineCrossesObj", "size", "area", "c", "intersect_1", "intersect", "calc_xy", "value", "size", "x", "y", "scale", "portal_pad", "Direction", "#value", "owner", "target", "angle", "Directions", "#list", "item", "new_item", "index", "a", "b", "aa", "bb", "randomInt", "a", "b", "randomFrom", "shuffle", "array", "seq", "resources", "planetTypes", "colors", "planetNamesTable", "ret", "buy", "sell", "Planet", "x", "y", "type_n", "type", "isBad", "size", "center", "makePlanets", "thisPlanetTypes", "shuffle", "seq", "_n", "bad", "xx", "yy", "i", "starColors", "mkgrid", "star", "size", "grid", "seq", "portals_ext", "x", "center", "y", "countJobs", "planets", "data", "resources", "planet", "jobs", "Star", "load", "randomFrom", "randomInt", "Directions", "value", "Direction", "makePlanets", "Planet", "other", "direction", "player_star", "set_player_star", "x", "default_universe", "measureAngle", "a", "b", "moveToNewStar", "star", "oldStar", "newStars", "connection", "newStar", "Star", "commonNeighbour", "newNeighbour", "connectionToUse", "newValue", "randomInt", "newDirection", "Direction", "leftStar", "leftDirection", "rightDirection", "rightStar", "bisect", "fromDirection", "toDirection", "degreesToSplit", "lastAdded", "keepNeighbours", "oldConnection", "stats", "saveUniverse", "n", "flightplan", "loadUniverse", "data", "i", "check", "ok", "c", "dirToNextNeighbour", "nextNeighbour", "badAngles", "shown_star", "set_shown_star", "x", "hintTarget", "visibleStar", "setupHints", "star", "canvas", "hintTargetObj", "hint", "click", "hintText", "obj", "Direction", "mode", "ret", "player_star", "flightplan", "reason", "Planet", "Star", "objAt", "y", "event", "cell_x", "cell_size", "portal_pad", "cell_y", "radius", "portal_size", "neighbour", "dist", "planet_size", "portals_ext", "redraw", "Flightplan", "x", "y", "cargo", "element", "planet", "i", "step", "value", "dontUpdate", "changed", "noAutoSell", "new_cargo", "a", "ret", "obj", "intersect", "lineCrossesObj", "player_star", "size", "planet_size", "cell_size", "mode", "name", "star", "direction", "flightplan", "xy", "lengths", "v", "arr", "distanceFromStart", "totalLength", "prc", "portal_pad", "redrawFlightplan", "html", "gebi", "shown_star", "reason", "planet_size", "cell_size", "portal_size", "portals_ext", "portal_pad", "draw_planet", "ctx", "planet", "x", "y", "grd", "draw_portal", "neighbour", "player_star", "draw_player_there", "perimeter", "dashes_count", "dashes_length", "draw_player_here", "gebi", "scale", "size", "angle", "r", "point_x", "a", "point_y", "side", "height", "s", "t", "draw_star", "star", "max_size", "center", "x0", "flightplan", "y0", "i", "import_textFit", "gebi", "id", "element", "gibi", "mode", "c", "ctx", "real_savegame_id", "flyi_time", "flyi_finish", "flyi_interval", "redraw", "draw_star", "shown_star", "setupHints", "redrawFlightplan", "player_star", "stats", "x", "flyi_switch", "save_game", "simple_save_game", "start_game", "default_universe", "PocketBase", "pb", "saveUniverse", "r", "start_real_game", "setup_login_flow", "ex", "flyi_step", "flyi_remain", "on", "textFit", "flightplan", "universe", "loadUniverse", "check", "set_shown_star", "jump_start", "target_star", "moveToNewStar", "lastCargo", "direction", "set_player_star", "jump_end", "jump_start", "redraw", "flightplan", "redrawFlightplan", "set_shown_star", "shown_star", "player_star"]
}
