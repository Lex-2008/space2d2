{
  "version": 3,
  "sources": ["src/geometry.ts", "src/angle.ts", "src/utils.ts", "src/planets.ts", "src/stars.ts", "src/universe.ts", "src/hints.ts", "src/flightplan.ts", "src/draw.ts", "src/index.ts"],
  "sourcesContent": ["function normVector(x,y){\n\tconst d=Math.hypot(x,y);\n\treturn [x/d,y/d];\n}\n\nfunction scalarMul(v1,v2){\n\treturn v1[0]*v2[0]+v1[1]*v2[1];\n}\n\n// see http://www.gamedev.ru/code/forum/?id=74832 and https://ru.wikipedia.org/wiki/\u0420\u0430\u0441\u0441\u0442\u043E\u044F\u043D\u0438\u0435_\u043E\u0442_\u0442\u043E\u0447\u043A\u0438_\u0434\u043E_\u043F\u0440\u044F\u043C\u043E\u0439_\u043D\u0430_\u043F\u043B\u043E\u0441\u043A\u043E\u0441\u0442\u0438#\u041F\u0440\u044F\u043C\u0430\u044F_\u0437\u0430\u0434\u0430\u043D\u0430_\u0434\u0432\u0443\u043C\u044F_\u0442\u043E\u0447\u043A\u0430\u043C\u0438\nfunction dotOnLine(a,b,p){\n\tconst v=normVector(a.x-b.x, a.y-b.y);\n\tconst m=scalarMul(v,[p.x-b.x, p.y-b.y]);\n\treturn [b.x+v[0]*m, b.y+v[1]*m];\n}\n\n// does a-b line cross obj p with size?\nexport function lineCrossesObj(a,b,p,size){\n\tconst [x,y]=dotOnLine(a,b,p);\n\treturn x>=Math.min(a.x,b.x)&&\n\t       x<=Math.max(a.x,b.x)&&\n\t       y>=Math.min(a.y,b.y)&&\n\t       y<=Math.max(a.y,b.y)&&\n\t\tMath.hypot(x-p.x, y-p.y)<size;\n}\n\n\n// see https://e-maxx.ru/algo/segments_intersection_checking\n\nfunction area (a, b, c) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n}\n\nfunction intersect_1 (a, b, c, d) {\n\tif (a > b) [a,b]=[b,a];\n\tif (c > d) [c,d]=[d,c];\n\treturn Math.max(a,c) <= Math.min(b,d);\n}\n\nexport function intersect (a, b, c, d) {\n\treturn intersect_1 (a.x, b.x, c.x, d.x)\n\t    && intersect_1 (a.y, b.y, c.y, d.y)\n\t\t&& area(a,b,c) * area(a,b,d) <= 0\n\t\t&& area(c,d,a) * area(c,d,b) <= 0;\n}\n", "import { portal_pad } from \"./draw.js\";\n\nfunction calc_xy(value, size){\n\tvar x=Math.cos(value/180*Math.PI);\n\tvar y=-Math.sin(value/180*Math.PI);\n\tvar scale=1/Math.max(Math.abs(x),Math.abs(y));\n\t// size-=1;\n\tsize+=portal_pad;\n\tx=x*scale*size/2+size/2-portal_pad/2;//+0.5;\n\ty=y*scale*size/2+size/2-portal_pad/2;//+0.5;\n\treturn [x,y];\n}\n\nexport class Direction {\n\ttarget; //something this vector points at, can be null - not used by the class itself\n\tx;y; // portal coordinates, calculated during creation\n\t#value; //angle, value can be -179..+180.\n\tlist; //optional, list which this direction is part of\n\t// We could limit it to 0..360, but it would complicate calculating \"to the left\"/\"to the right\" values\n\tconstructor(value,owner,target?){\n\t\tthis.value=value;\n\t\tthis.target=target;\n\t\t[this.x, this.y]=calc_xy(value,owner.size);\n\t}\n\tstatic normalize(value){\n\t\twhile(value<=-180) value+=360;\n\t\twhile(value>+180) value-=360;\n\t\treturn value;\n\t}\n\tget value() { return this.#value }\n\tset value(value) { this.#value = Direction.normalize(value) }\n\tangleTo(value) {\n\t\tif(value instanceof Direction) return this.angleTo(value.value);\n\t\treturn Direction.normalize(value-this.#value);\n\t}\n\tpositiveAngleTo(value) {\n\t\tconst angle = this.angleTo(value);\n\t\tif(angle<0) return angle+360;\n\t\treturn angle;\n\t}\n\t// // functions which return value (angle between two vectors, or their sum)\n\tadd(value){\n\t\tif(value instanceof Direction) return this.add(value.value);\n\t\treturn Direction.normalize(this.#value + value);\n\t}\n\t// sub(value){\n\t// \tif(value instanceof Direction) return this.sub(value.value);\n\t// \treturn Direction.normalize(this.#value - value);\n\t// }\n\t// // functions which change value of this vector\n\t// inc(value){ this.#value = this.add(value) }\n\t// dec(value){ this.#value = this.sub(value) }\n\t// // handy functions which propagate to parent list\n\t// // they will return 'undefined' if this.list is not set\n\t// next() { return this.list && this.list.next(this) }\n\t// prev() { return this.list && this.list.prev(this) }\n\t// left() { return this.list && this.list.left(this) }\n\t// right() { return this.list && this.list.right(this) }\n}\n\nexport class Directions {\n\t#list=[]; // ordered list of directions\n\towner; // star, to which this list belongs to\n\tconstructor(owner){\n\t\tthis.owner=owner;\n\t}\n\t*[Symbol.iterator]() {\n\t\tfor(var item of this.#list) yield item;\n\t}\n\tadd(new_item){\n\t\t// console.trace(`adding ${new_item.value} to ${this.owner.name}`);\n\t\tlet index=this.#list.findIndex(item=>item.value>new_item.value);\n\t\tif(index<0) index=this.#list.length;\n\t\tthis.#list.splice(index,0,new_item);\n\t\tnew_item.list=this;\n\t}\n\t// returns index of whatever is passed - either Direction, or is value\n\tindexOf(value){\n\t\tif(value instanceof Direction) return this.#list.indexOf(value);\n\t\tif(typeof value == \"number\") {\n\t\t\tvalue = Direction.normalize(value);\n\t\t\treturn this.#list.findIndex(item=>item.value==value);\n\t\t} else {\n\t\t\treturn this.#list.findIndex(item=>item.target==value);\n\t\t}\n\t}\n\tangleBetween(a,b) {\n\t\tif(!(a instanceof Direction)) a=this.directionOf(a);\n\t\tif(!(b instanceof Direction)) b=this.directionOf(b);\n\t\treturn a.angleTo(b);\n\t}\n\tget count() { return this.#list.length }\n\t// returns Direction object with given target, or null if none found\n\tdirectionOf(value){\n\t\tlet index = this.indexOf(value);\n\t\tif(index<0) return null;\n\t\treturn this.#list[index];\n\t}\n\t// insert new item, or set a target of an existing one\n\tlink(value, target){\n\t\tlet index = this.indexOf(value);\n\t\tif(index<0){\n\t\t\tthis.add(new Direction(value, this.owner, target));\n\t\t} else {\n\t\t\tthis.#list[index].target=target;\n\t\t}\n\t}\n\t// functions to navigate the list\n\t// if item is not in the list - returns first or last element\n\tnext(item){\n\t\tlet index=this.indexOf(item);\n\t\tif(index<0) return null;\n\t\treturn this.#list[index+1] || this.#list[0];\n\t}\n\tprev(item){\n\t\tlet index=this.indexOf(item);\n\t\tif(index<0) return null;\n\t\treturn this.#list[index-1] || this.#list.at(-1);\n\t}\n\t// aliases\n\tleft(item){ return this.next(item) }\n\tright(item){ return this.prev(item) }\n}\n", "export function randomInt(a, b) {\n\tif(a>b) [a,b]=[b,a];\n\treturn Math.floor(Math.random() * (b - a + 1)) + a;\n}\n\nexport function randomFrom(a){\n\treturn a[Math.floor(Math.random()*a.length)];\n}\n\nexport function shuffle(array) {\n\treturn array.map((a) => ({ sort: Math.random(), value: a }))\n\t\t.sort((a, b) => a.sort - b.sort)\n\t\t.map((a) => a.value)\n}\n\nexport function seq(a) {\n\treturn [...Array(a).keys()]\n\t//=> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n}\n", "import { shuffle, seq } from \"./utils\";\n\nexport const resources=['water','iron','food','radioactives'];\nvar planetTypes=(function(){\n\tvar colors=['blue','yellow','green','red'];\n\tvar planetNamesTable=[ // table: rows: what planet buys; columns: what planet sells; value: planet name\n\t\t[null,'water-mining','farming','burning'],\n\t\t['ice',null,'hunting','fire'],\n\t\t['fishy','bio-mining',null,'nuclear'],\n\t\t['frozen','hot mining','ice-farming',null]];\n\n\tvar ret=[\n\t\t['ocean',null,'water','navy','blue'],\n\t\t['dry','water',null,'blue','white'],\n\t\t['mining',null,'iron','olive','yellow'],\n\t\t['populated','food',null,'green','lime']];\n\n\tfor(var buy=0; buy<4; buy++){\n\t\tfor(var sell=0; sell<4; sell++){\n\t\t\tif(buy==sell) continue;\n\t\t\tret.push([planetNamesTable[buy][sell], resources[buy],resources[sell], colors[buy],colors[sell]])\n\t\t}\n\t}\n\treturn ret;\n})();\n\nexport function Planet(x, y, type_n) {\n\tvar type=planetTypes[type_n];\n\tthis.x = x;\n\tthis.y = y;\n\tthis.type = type_n;\n\tthis.name = type[0];\n\tthis.buys = type[1];\n\tthis.sells = type[2];\n\tthis.color_in = type[3];\n\tthis.color_out = type[4];\n\tthis.save=function(){\n\t\treturn[this.x,this.y,this.type];\n\t}\n}\n\nfunction isBad(x,y,size){\n\tvar center=size/2;\n\treturn x<center+0.6 && x>center-0.6 && y<center+0.6 && y>center-0.6;\n}\n\nexport function makePlanets(size,grid) {\n\tvar thisPlanetTypes=shuffle(seq(planetTypes.length));\n\tfor(var _n=0;_n<100;_n++){\n\t\tvar bad=false;\n\t\tvar ret=[];\n\t\tvar xx = shuffle(seq(size));\n\t\tvar yy = shuffle(seq(size));\n\t\t// console.log(_n,xx,yy);\n\t\tvar center=size/2;\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif(isBad(xx[i]+0.5,yy[i]+0.5,size)){\n\t\t\t\tbad=true;\n\t\t\t}\n\t\t\tif(grid[xx[i]][yy[i]]){\n\t\t\t\tbad=true;\n\t\t\t}\n\t\t\tret.push([xx[i] + 0.5, yy[i] + 0.5, thisPlanetTypes[i]]);\n\t\t}\n\t\tif(!bad) return ret;\n\t}\n\tconsole.error('should not be here');\n\treturn[];\n}\n", "// 1. copypaste table from https://www.cssportal.com/css3-color-names/ to vim\n// 2. :%s/^\\t\\([^\\t]*\\)\\t#[^\\t]*\\t/['\\1', /\n// 3. :%s/$/],/\n// 4. copypaste from vim to JS console, assign to var data=[...]\n// 5. use RGBToHSL function from https://css-tricks.com/converting-color-spaces-in-javascript/, modified to return only 'l' as number\n// 6. out=data.map(x=>[x[0],RGBToHSL(x[1],x[2],x[3])])\n\nimport { Directions, Direction } from \"./angle.js\";\nimport { portals_ext } from \"./draw.js\";\nimport { makePlanets, Planet, resources } from \"./planets.js\";\nimport { seq, randomFrom, randomInt } from \"./utils.js\";\n\n// 7. prompt('',JSON.stringify(out.filter(x=>x[1]>40).map(x=>x[0])))\nvar starColors=[\"AliceBlue\",\"AntiqueWhite\",\"Aqua\",\"Aquamarine\",\"Azure\",\"Beige\",\"Bisque\",\"BlanchedAlmond\",\"Blue\",\"BlueViolet\",\"Brown\",\"BurlyWood\",\"CadetBlue\",\"Chartreuse\",\"Chocolate\",\"Coral\",\"CornflowerBlue\",\"Cornsilk\",\"Crimson\",\"Cyan\",\"DarkGray\",\"DarkGrey\",\"DarkKhaki\",\"DarkOrange\",\"DarkOrchid\",\"DarkSalmon\",\"DarkSeaGreen\",\"DarkTurquoise\",\"DarkViolet\",\"DeepPink\",\"DeepSkyBlue\",\"DimGray\",\"DodgerBlue\",\"FireBrick\",\"FloralWhite\",\"Fuchsia\",\"Gainsboro\",\"GhostWhite\",\"Gold\",\"Goldenrod\",\"Gray\",\"GreenYellow\",\"Grey\",\"Honeydew\",\"HotPink\",\"IndianRed\",\"Ivory\",\"Khaki\",\"Lavender\",\"LavenderBlush\",\"LawnGreen\",\"LemonChiffon\",\"LightBlue\",\"LightCoral\",\"LightCyan\",\"LightGoldenrodYellow\",\"LightGray\",\"LightGreen\",\"LightGrey\",\"LightPink\",\"LightSalmon\",\"LightSeaGreen\",\"LightSkyBlue\",\"LightSlateGray\",\"LightSlateGrey\",\"LightSteelBlue\",\"LightYellow\",\"Lime\",\"LimeGreen\",\"Linen\",\"Magenta\",\"MediumAquamarine\",\"MediumBlue\",\"MediumOrchid\",\"MediumPurple\",\"MediumSeaGreen\",\"MediumSlateBlue\",\"MediumSpringGreen\",\"MediumTurquoise\",\"MediumVioletRed\",\"MintCream\",\"MistyRose\",\"Moccasin\",\"NavajoWhite\",\"OldLace\",\"Orange\",\"OrangeRed\",\"Orchid\",\"PaleGoldenrod\",\"PaleGreen\",\"PaleTurquoise\",\"PaleVioletRed\",\"PapayaWhip\",\"PeachPuff\",\"Peru\",\"Pink\",\"Plum\",\"PowderBlue\",\"Red\",\"RosyBrown\",\"RoyalBlue\",\"Salmon\",\"SandyBrown\",\"Seashell\",\"Sienna\",\"Silver\",\"SkyBlue\",\"SlateBlue\",\"SlateGray\",\"SlateGrey\",\"Snow\",\"SpringGreen\",\"SteelBlue\",\"Tan\",\"Thistle\",\"Tomato\",\"Turquoise\",\"Violet\",\"Wheat\",\"White\",\"WhiteSmoke\",\"Yellow\",\"YellowGreen\"];\n\nfunction mkgrid(star, size){\n\tvar grid=seq(size+2*portals_ext).map(x=>[]);\n\tvar center=(size-1)/2;\n\tfor(var x=Math.floor(center);x<=Math.ceil(center);x++){\n\t\tfor(var y=Math.floor(center);y<=Math.ceil(center);y++){\n\t\t\tgrid[x+1*portals_ext][y+1*portals_ext]=star;\n\t\t}\n\t}\n\treturn grid;\n}\n\nfunction countJobs(planets){\n\tvar data={null:{buys:0,sells:0}};\n\tresources.forEach(x=>{data[x]={buys:0,sells:0}});\n\tplanets.forEach(planet=>{data[planet.buys].buys++; data[planet.sells].sells++});\n\tvar jobs=0;\n\tresources.forEach(x=>{jobs+=Math.min(data[x].buys,data[x].sells)});\n\treturn jobs;\n}\n\nexport function Star(load?) {\n\tif(!load){\n\t\tload={\n\t\t\tc:randomFrom(starColors),\n\t\t\ts:randomInt(5,9),\n\t\t\tn:false,\n\t\t\tp:false,\n\t\t\tv:false,\n\t\t}\n\n\t}\n\t// TODO: make sure colors don't repeat\n\tthis.color = load.c;\n\tthis.size=load.s;\n\tthis.visited=load.v;\n\tthis.x = this.y = this.size/2;\n\tthis.bright=false;\n\tthis.name=this.color;\n\tif(this.size%2==0){\n\t\tthis.bright=true;\n\t\tthis.name='bright '+this.name;\n\t}\n\tthis.neighbours = new Directions(this);\n\tif(load.n){\n\t\tfor(var value of load.n){\n\t\t\tthis.neighbours.add(new Direction(value, this));\n\t\t}\n\t}\n\tthis.grid=mkgrid(this, this.size);\n\tif(!load.p) load.p=makePlanets(this.size, this.grid); //from planets.js\n\tthis.planets = load.p.map(x=>new Planet(...x));\n\tfor(var planet of this.planets){\n\t\tthis.grid[Math.floor(planet.x)+1*portals_ext][Math.floor(planet.y)+1*portals_ext]=planet;\n\t}\n\tthis.jobs=countJobs(this.planets);\n\n\tthis.link = function(other, direction){\n\t\tif(direction instanceof Direction){\n\t\t\tdirection.target=other;\n\t\t\tother.neighbours.link( direction.value+180,this);\n\t\t} else {\n\t\t\tthis.neighbours.link( direction,other);\n\t\t\tother.neighbours.link( direction+180,this);\n\t\t}\n\t}\n\n\tthis.save=function(){\n\t\treturn {\n\t\t\tc:this.color,\n\t\t\ts:this.size,\n\t\t\tn:Array.from(this.neighbours).map(x=>x.value),\n\t\t\tp:this.planets.map(x=>x.save()),\n\t\t\tv:this.visited,\n\t\t};\n\t}\n}\n\n", "import { Direction } from \"./angle.js\";\nimport { flightplan } from \"./flightplan.js\";\nimport { Star } from \"./stars.js\";\nimport { randomInt } from \"./utils.js\";\n\nexport var player_star;\nexport function set_player_star(x){player_star=x};\n\nexport var mode='hard';\n\n// Universe is just one star with its neighbours\nexport const default_universe='{\"v\":1,\"s\":{\"c\":\"Yellow\",\"s\":4,\"n\":[-134,-71,-18,34,110,177],\"p\":[[2.5,0.5,3],[1.5,3.5,0],[3.5,2.5,5]],\"v\":false},\"n\":[{\"c\":\"LightGreen\",\"s\":5,\"n\":[-145,-80,-8,46,99,151],\"p\":[[4.5,2.5,2],[1.5,0.5,9],[3.5,3.5,7],[2.5,1.5,12],[0.5,4.5,11]],\"v\":0},{\"c\":\"LightGray\",\"s\":5,\"n\":[-128,-77,-27,46,109,172],\"p\":[[2.5,4.5,1],[3.5,2.5,9],[1.5,1.5,10],[0.5,3.5,15],[4.5,0.5,0]],\"v\":false},{\"c\":\"Peru\",\"s\":5,\"n\":[-134,-79,-52,-9,34,98,162],\"p\":[[1.5,2.5,9],[4.5,1.5,6],[2.5,4.5,2],[3.5,0.5,0],[0.5,3.5,12]],\"v\":false},{\"c\":\"Bisque\",\"s\":5,\"n\":[-146,-82,-19,9,52,94,169],\"p\":[[3.5,1.5,4],[1.5,3.5,9],[2.5,4.5,14],[0.5,2.5,2],[4.5,0.5,10]],\"v\":false},{\"c\":\"LightBlue\",\"s\":6,\"n\":[-137,-70,-11,41,92,156],\"p\":[[1.5,3.5,13],[4.5,5.5,4],[5.5,2.5,6],[3.5,0.5,15],[2.5,4.5,3],[0.5,1.5,0]],\"v\":false},{\"c\":\"LightSeaGreen\",\"s\":5,\"n\":[-144,-81,-3,43,88,154],\"p\":[[4.5,2.5,13],[3.5,4.5,14],[1.5,0.5,7],[2.5,3.5,11],[0.5,1.5,3]],\"v\":1}],\"f\":{\"x\":-0.25,\"y\":1.882,\"c\":null},\"st\":{\"p\":0,\"s\":0,\"jf\":0,\"js\":0}}';\n\n// function task(){\n// \tvar a=0.5, b=1; //coords of home planet\n// \tvar r=0.25; // radius of planet/orbit height\n// \tvar x0=1.5, y0=3.5; // coords of dest planet\n// \tconsole.log(`solve (x1-${a})^2+(y1-${b})^2=${r}^2, (${x0}-x1)*(x1-${a})+(${y0}-y1)*(y1-${b})=0 for x1,y1`)\n// \t// x1\u22480.277504 \u2227 y1\u22481.114\n// }\n\nfunction measureAngle(x,a,b){\n\treturn x.neighbours.directionOf(a).angleTo(x.neighbours.directionOf(b));\n}\n\n// move player from one star to the new one\nexport function moveToNewStar(star,oldStar){\n\t// 1. create new systems\n\tvar newStars=[];\n\tfor(var connection of star.neighbours){\n\t\tif(!connection.target){\n\t\t\tvar newStar=new Star();\n\t\t\tstar.link(newStar, connection);\n\t\t\tnewStars.push(newStar);\n\t\t}\n\t}\n\t// 2. connect systems to existing neighbours\n\t// console.log(star.neighbours,oldStar);\n\tvar commonNeighbour=star.neighbours.left(oldStar).target;\n\tvar newNeighbour=star.neighbours.left(commonNeighbour).target;\n\tvar connectionToUse=commonNeighbour.neighbours.right(star);\n\tcommonNeighbour.link(newNeighbour,connectionToUse);\n\t//2.5\n\tvar a=commonNeighbour.neighbours.angleBetween(\n\t\tcommonNeighbour.neighbours.right(newNeighbour),\n\t\tnewNeighbour);\n\tvar newValue=randomInt(100-a,Math.min(160-a,80));\n\tconsole.log(`setting new angle to ${newValue} to have triangle ${a} - ${newValue} - ${180-a-newValue}`);\n\tnewDirection=new Direction(newNeighbour.neighbours.directionOf(commonNeighbour).add(newValue), newNeighbour);\n\tnewNeighbour.neighbours.add(newDirection);\n\t// console.log(`reused existing connection from ${commonNeighbour.name} to link to ${newNeighbour.name}`);\n\t// console.log(`got angles: ${measureAngle(star,commonNeighbour,newNeighbour)}, ${measureAngle(commonNeighbour,newNeighbour,star)}, ${measureAngle(newNeighbour,star,commonNeighbour)}`);\n\t// console.log('connecting',commonNeighbour.name,newNeighbour.name);\n\t// 2.\n\tvar commonNeighbour=star.neighbours.right(oldStar).target;\n\tvar newNeighbour=star.neighbours.right(commonNeighbour).target;\n\tvar connectionToUse=commonNeighbour.neighbours.left(star);\n\tcommonNeighbour.link(newNeighbour,connectionToUse);\n\t// 2.5\n\tvar a=commonNeighbour.neighbours.angleBetween(\n\t\tnewNeighbour,\n\t\tcommonNeighbour.neighbours.left(newNeighbour));\n\t// console.log('random number between',100-a,Math.min(160-a,80));\n\tvar newValue=randomInt(100-a,Math.min(160-a,80));\n\tconsole.log(`setting new angle to ${newValue} to have triangle ${a} - ${newValue} - ${180-a-newValue}`);\n\tnewDirection=new Direction(newNeighbour.neighbours.directionOf(commonNeighbour).add(-newValue), newNeighbour);\n\tnewNeighbour.neighbours.add(newDirection);\n\t// console.log(`reused existing connection from ${commonNeighbour.name} to link to ${newNeighbour.name}`);\n\t// console.log(`got angles: ${measureAngle(star,newNeighbour,commonNeighbour)}, ${measureAngle(commonNeighbour,star,newNeighbour)}, ${measureAngle(newNeighbour,commonNeighbour,star)}`);\n\t// console.log('connecting',commonNeighbour.name,newNeighbour.name);\n\t// 3. link new systems to each other\n\tfor(var leftStar of newStars){\n\t\tvar leftDirection = star.neighbours.directionOf(leftStar);\n\t\tvar rightDirection = star.neighbours.right(leftDirection);\n\t\tvar rightStar = rightDirection.target;\n\t\tif(newStars.indexOf(rightStar)<0) continue;\n\t\t// if(star.neighbours.left(rightStar).target!=leftStar) [leftStar, rightStar] = [rightStar, leftStar];\n\t\tif(star.neighbours.left(rightStar).target!=leftStar) console.error('e0',leftStar,rightStar);\n\t\tif(leftDirection.target!=leftStar) console.error('e1',leftDirection,leftStar);\n\t\tvar bisect = leftDirection.add(Math.round(leftDirection.angleTo(rightDirection)/2));\n\t\t// var bisect = (leftDirection.value+rightDirection.value)/2;\n\t\t// if(leftDirection.value >90 && rightDirection.value<90) bisect+=180;\n\t\tconsole.log(`linking ${leftStar.name} and ${rightStar.name}`);\n\t\t// console.log(`bisect of ${leftDirection.value} and ${rightDirection.value} is ${bisect} (shold be ${(leftDirection.value+rightDirection.value)/2})`);\n\t\tleftStar.link(rightStar, bisect-90);\n\t\t// console.log(`check: ${leftStar.neighbours.directionOf(rightStar).value} and ${rightStar.neighbours.directionOf(leftStar).value}`);\n\t\t// 3.5\n\t\tvar a=randomInt(20,80);\n\t\tvar b=randomInt(100-a,Math.min(160-a,80));\n\t\tif(180-a-b<20||180-a-b>80) console.error('e3',a,b);\n\t\tvar newDirection=new Direction(leftStar.neighbours.directionOf(rightStar).add(a), leftStar);\n\t\tleftStar.neighbours.add(newDirection);\n\t\tvar newDirection=new Direction(rightStar.neighbours.directionOf(leftStar).add(-b), rightStar);\n\t\trightStar.neighbours.add(newDirection);\n\t}\n\t// 4. add new (empty) connections\n\tfor(var newStar of newStars){\n\t\tvar fromDirection=newStar.neighbours.next(newStar.neighbours.next(star));\n\t\tvar toDirection=newStar.neighbours.prev(newStar.neighbours.prev(star));\n\t\tvar degreesToSplit=fromDirection.positiveAngleTo(toDirection);\n\t\t// if(degreesToSplit<180) console.error('e2',newStar);\n\t\t// var minValue=randomInt(50,80);\n\t\t// var maxValue=degreesToSplit-randomInt(50,80);\n\t\t// console.log(`splitting for ${newStar.name}`, newStar.neighbours);\n\t\t// console.log(`filling between ${fromDirection.target.name} (${fromDirection.value}) and ${toDirection.target.name} (${toDirection.value})`);\n\t\t// console.log(`splitting ${degreesToSplit} from ${minValue} (${fromDirection.add(minValue)}) to ${maxValue} (${fromDirection.add(maxValue)})`);\n\t\tvar lastAdded=0;\n\t\tfor(var newValue=randomInt(20,80); newValue<degreesToSplit-20; newValue+=randomInt(20,80)){\n\t\t\tconsole.log(`got ${newValue} will be ${fromDirection.add(newValue)}`);\n\t\t\t// without second argument, 'link' adds direction without a target\n\t\t\t// newStar.neighbours.link(fromDirection.add(newValue));\n\t\t\tvar newDirection=new Direction(fromDirection.add(newValue), newStar);\n\t\t\tnewStar.neighbours.add(newDirection);\n\t\t\tlastAdded=newValue;\n\t\t}\n\t\tconsole.log(`loop done with ${(degreesToSplit-lastAdded)} gap`);\n\t\tif(degreesToSplit-lastAdded>80){\n\t\t\tnewValue=randomInt(lastAdded+20,degreesToSplit-20);\n\t\t\tconsole.log(`adding ${newValue} (will be ${fromDirection.add(newValue)}) to fill the gap`);\n\t\t\tnewDirection=new Direction(fromDirection.add(newValue), newStar);\n\t\t\tnewStar.neighbours.add(newDirection);\n\t\t}\n\t\t// console.log(`also ${newValue} will be ${fromDirection.add(newValue)}`);\n\t\t// fromDirection=new Direction(fromDirection.add(newValue), newStar);\n\t\t// newStar.neighbours.add(fromDirection);\n\t\t// console.log(`adding last ${maxValue} will be ${fromDirection.add(maxValue)}`);\n\t\t// newDirection=new Direction(fromDirection.add(maxValue), newStar);\n\t\t// newStar.neighbours.add(newDirection);\n\t\t// newStar.makePlanets();\n\t}\n\t//*\n\t// 5. clean up\n\tvar keepNeighbours=[star,star.neighbours.left(oldStar).target,star.neighbours.right(oldStar).target];\n\tfor(var oldConnection of oldStar.neighbours){\n\t\tif(keepNeighbours.indexOf(oldConnection.target)<0){\n\t\t\toldConnection.target=null;\n\t\t}\n\t}\n\tstar.neighbours.left(oldStar).target.neighbours.left(oldStar).target=null;\n\tstar.neighbours.right(oldStar).target.neighbours.right(oldStar).target=null;\n\t//*/\n}\n\nexport var stats={};\n\nexport function saveUniverse(){\n\treturn {\n\t\tv:1,\n\t\ts:player_star.save(),\n\t\tn:Array.from(player_star.neighbours).map(n=>n.target.save()),\n\t\tf:{x:flightplan.steps[0].x,\n\t\t   y:flightplan.steps[0].y,\n\t\t   c:flightplan.steps[0].cargo},\n\t\tst:stats,\n\t}\n}\n\nexport function loadUniverse(data){\n\tif(data.v!=1) return;\n\tplayer_star=new Star(data.s);\n\tvar newStars=[];\n\tfor(var i=0; i<data.n.length; i++){\n\t\tvar newStar=new Star(data.n[i]);\n\t\tnewStars.push(newStar);\n\t\tplayer_star.link(newStar, data.s.n[i]);\n\t}\n\t// link neighbours to each other\n\tfor(var leftStar of newStars){\n\t\tvar rightStar = player_star.neighbours.right(leftStar).target;\n\t\tleftStar.neighbours.left(player_star).target=rightStar;\n\t\trightStar.neighbours.right(player_star).target=leftStar;\n\t}\n\tflightplan.init(data.f.x,data.f.y,data.f.c,document.getElementById('myFlightplan'));\n\tstats=data.st;\n}\n\nexport function check(){\n\tvar ok=true;\n\tfor(var c of player_star.neighbours){\n\t\tif(Direction.normalize(c.value+180)!=c.target.neighbours.directionOf(player_star).value){\n\t\t\tconsole.error('player_star and ... dont point to each other', c.target.name,\n\t\t\t\tDirection.normalize(c.value+180),c.target.neighbours.directionOf(player_star).value\n\t\t\t);\n\t\t\tok=false;\n\t\t}\n\t\tif(player_star.neighbours.left(c).target!=c.target.neighbours.right(player_star).target){\n\t\t\tconsole.error('left (as seen from player_star) and right from ... dont match', c.target.name)\n\t\t\tok=false;\n\t\t}\n\t\tif(player_star.neighbours.right(c).target!=c.target.neighbours.left(player_star).target){\n\t\t\tconsole.error('right (as seen from player_star) and left from ... dont match', c.target.name);\n\t\t\tok=false;\n\t\t}\n\t\tvar dirToNextNeighbour=c.target.neighbours.next(player_star);\n\t\tvar nextNeighbour=dirToNextNeighbour.target;\n\t\tif(nextNeighbour.neighbours.directionOf(c.target).value!=Direction.normalize(dirToNextNeighbour.value+180)){\n\t\t\tconsole.error('neighbours dont point to each other', c.target.name, nextNeighbour.name,\n\t\t\t\tnextNeighbour.neighbours.directionOf(c.target).value,Direction.normalize(dirToNextNeighbour.value+180));\n\t\t\tok=false;\n\t\t}\n\t\tif(measureAngle(c.target,c.target.neighbours.prev(nextNeighbour),nextNeighbour)+\n\t\t   measureAngle(nextNeighbour,c.target,nextNeighbour.neighbours.next(c.target))<100){\n\t\t\tconsole.error('future common neighbour of two neighbours will have bad angle', c.target.name, nextNeighbour.name,\n\t\t\t\t180 - measureAngle(c.target,c.target.neighbours.prev(nextNeighbour),nextNeighbour)-\n\t\t\t\t      measureAngle(nextNeighbour,c.target,nextNeighbour.neighbours.next(c.target)));\n\t\t\tok=false;\n\t\t}\n\t\tvar badAngles=Array.from(c.target.neighbours).map((x)=>x.angleTo(c.target.neighbours.next(x))).filter(x=>Math.abs(x)<20||Math.abs(x)>80);\n\t\tif(badAngles.length){\n\t\t\tconsole.error('neighbour has bad angles',c.target.name,badAngles);\n\t\t\tok=false;\n\t\t}\n\t\t// if(!ok) return ok;\n\t}\n\tvar badAngles=Array.from(player_star.neighbours).map((x)=>x.angleTo(player_star.neighbours.next(x))).filter(x=>Math.abs(x)<20||Math.abs(x)>80);\n\tif(badAngles.length){\n\t\tconsole.error('player_star has bad angles');\n\t\tok=false;\n\t}\n\treturn ok;\n}\n", "import { Direction } from \"./angle.js\";\nimport { cell_size, portal_pad, portal_size, planet_size, portals_ext } from \"./draw.js\";\nimport { flightplan } from \"./flightplan.js\";\nimport { redraw } from \"./index.js\";\nimport { Planet } from \"./planets.js\";\nimport { Star } from \"./stars.js\";\nimport { mode, player_star } from \"./universe.js\";\n\nexport var shown_star;\n\nexport function set_shown_star(x){shown_star=x};\n\n// var grid=[];\nvar hintTarget=null;\nvar visibleStar;\n\nexport function setupHints(star,canvas,hintTargetObj){\n\tvisibleStar=star;\n\tcanvas.onmousemove=hint;\n\thintTarget=hintTargetObj;\n\tcanvas.onmouseleave=function(){hintTarget.innerText='Hover an object on the map to see what it is'};\n\tcanvas.onclick=click;\n}\n\nfunction hintText(obj){\n\tif(obj instanceof Direction){\n\t\tif(!obj.target) return ['Portal to unknown'+(mode=='test'?' at'+obj.value:'')];\n\t\tvar ret=['Portal to '+hintText(obj.target)+(mode=='test'?' at'+obj.value:'')];\n\t\tif(shown_star == player_star){\n\t\t\tif(Math.abs(obj.x - flightplan.steps[0].x)<0.001 &&\n\t\t\t   Math.abs(obj.y - flightplan.steps[0].y)<0.001){\n\t\t\t\tret.push('(you are here)');\n\t\t\t} else {\n\t\t\t\tvar reason=flightplan.cantJumpTo(obj.target, obj);\n\t\t\t\tif(reason) ret.push(\"You can't travel there: \"+reason);\n\t\t\t\telse ret.push(\"You can travel there\");\n\t\t\t}\n\t\t} else {\n\t\t\tif(obj.target == player_star) ret=ret.concat(['(you are there)','Click to return']);\n\t\t\telse if(obj.target.visited) ret.push(\"(you've been there before)\");\n\t\t}\n\t\tif(obj.target != player_star) {\n\t\t\tret.push('Click to explore');\n\t\t}\n\t\treturn ret;\n\t} else if(obj instanceof Planet){\n\t\tvar ret = [ obj.name + ' planet' ];\n\t\tif(obj.buys) ret.push('Buys: ' + obj.buys);\n\t\tif(obj.sells) ret.push('Sells: '+obj.sells);\n\t\tif(shown_star==player_star){\n\t\t\tvar reason=flightplan.cantTravelTo(obj);\n\t\t\tif(flightplan.steps.at(-1).planet==obj){\n\t\t\t\tret.push('Click to remove it from the flight plan');\n\t\t\t} else if(reason){\n\t\t\t\tret.push(`Can't travel there: ${reason}`);\n\t\t\t} else {\n\t\t\t\tret.push('Click to add it to the flight plan');\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t} else if(obj instanceof Star){\n\t\treturn [ obj.name + ' star' ];\n\t}\n\treturn ['Unknown object'];\n}\n\nfunction objAt(x,y,event){\n\tvar cell_x=Math.floor(x/cell_size-portal_pad);\n\tvar cell_y=Math.floor(y/cell_size-portal_pad);\n\t// console.log(cell_x,cell_y);\n\tif(cell_x<0||cell_x>=visibleStar.size||\n\t   cell_y<0||cell_y>=visibleStar.size){\n\t\t// in portal area\n\t\tvar radius=portal_size/cell_size;\n\t\tfor(var neighbour of visibleStar.neighbours){\n\t\t\tvar dist=Math.hypot(x/cell_size-neighbour.x-portal_pad,\n\t\t\t                    y/cell_size-neighbour.y-portal_pad);\n\t\t\t// console.log(dist,radius);\n\t\t\tif(dist<radius){\n\t\t\t\t// console.log(neighbour.getText().join('<br>'));\n\t\t\t\treturn neighbour;\n\t\t\t}\n\t\t}\n\t}\n\tif(!visibleStar.grid[cell_x] || !visibleStar.grid[cell_x][cell_y]){\n\t\treturn null;\n\t}\n\tvar obj=visibleStar.grid[cell_x][cell_y];\n\t// console.log(obj);\n\tif(obj instanceof Planet){\n\t\tvar radius=planet_size;\n\t} else {\n\t\tvar radius=cell_size/2;\n\t}\n\tvar dist=Math.hypot(event.offsetX-(obj.x+1*portals_ext+portal_pad)*cell_size, event.offsetY-(obj.y+1*portals_ext+portal_pad)*cell_size);\n\tif(dist<radius){\n\t\treturn obj;\n\t}\n}\n\nfunction hint(event){\n\tconst obj=objAt(event.offsetX, event.offsetY, event);\n\thintTarget.innerHTML=obj?hintText(obj).join('<br>'):\"Space void\";\n}\n\nfunction click(event){\n\tconst obj=objAt(event.offsetX, event.offsetY, event);\n\tif(obj instanceof Planet && shown_star == player_star){\n\t\tif(flightplan.steps.findIndex(x=>x.planet==obj) == flightplan.steps.length-1){\n\t\t\tflightplan.undo();\n\t\t\tredraw();\n\t\t\tflightplan.element.parentNode.scrollTop=1000;\n\t\t} else if(!flightplan.cantTravelTo(obj)){\n\t\t\tflightplan.add(obj);\n\t\t\tredraw();\n\t\t\tflightplan.element.parentNode.scrollTop=1000;\n\t\t}\n\t}\n\tif(obj instanceof Direction && obj.target){\n\t\tshown_star=obj.target;\n\t\tredraw();\n\t\thint(event);\n\t}\n\treturn;\n}\n", "import { planet_size, cell_size } from \"./draw.js\";\nimport { intersect, lineCrossesObj } from \"./geometry.js\";\nimport { shown_star } from \"./hints.js\";\nimport { player_star } from \"./universe.js\";\n\nexport const flightplan={\n\tsteps:[],\n\t// visited:[],\n\telement:null,\n\tinit:function(x,y,cargo,element){\n\t\tthis.element=element;\n\t\tthis.steps=[{\n\t\t\tstart:true,\n\t\t\tplanet:{x:x,y:y},\n\t\t\tx:x,y:y,\n\t\t\tbuy:false,\n\t\t\tsell:false,\n\t\t\tcargo:cargo,\n\t\t}];\n\t},\n\tadd:function(planet){\n\t\tconst oldIndex = flightplan.steps.findIndex(x=>x.planet==planet);\n\t\t// if(oldIndex == flightplan.steps.length-1) this.undo();\n\t\tif(oldIndex>=0) return;\n\t\t// if(this.visited.indexOf(planet)>-1) return;\n\t\t// this.visited.push(planet);\n\t\tvar cargo=this.steps.at(-1).cargo;\n\t\tthis.steps.push({\n\t\t\tplanet:planet,\n\t\t\tx:planet.x,\n\t\t\ty:planet.y,\n\t\t\tbuy:false,\n\t\t\tsell:false,\n\t\t\tcargo:cargo,\n\t\t});\n\t\tthis.updateStep(this.steps.length-1);\n\t},\n\tundo:function(){\n\t\t// don't remove first element - it's an initial state - how player arrived to this system\n\t\tif(this.steps.length<=1) return;\n\t\tthis.steps.pop();\n\t},\n\tcanSell:function(i){\n\t\treturn this.steps[i].planet.buys && this.steps[i-1].cargo == this.steps[i].planet.buys;\n\t},\n\tsetSell:function(i,value,dontUpdate){\n\t\tif(value && !this.canSell(i)) return;\n\t\tvar step=this.steps[i];\n\t\tstep.sell=value;\n\t\tif(!dontUpdate) this.updateStep(i,true,true);\n\t},\n\tcanBuy:function(i){\n\t\treturn this.steps[i].planet.sells && (!this.steps[i-1].cargo || this.steps[i].sell);\n\t},\n\tsetBuy:function(i,value,dontUpdate){\n\t\tif(value && !this.canBuy(i)) return;\n\t\tvar step=this.steps[i];\n\t\tstep.buy=value;\n\t\tif(!dontUpdate) this.updateStep(i,true);\n\t},\n\tupdateStep:function(i,changed,noAutoSell){\n\t\t// RECURSIVE\n\t\tif(i>=this.steps.length) return;\n\t\t// console.log('updateStep',i,changed);\n\t\tvar step=this.steps[i];\n\t\tif(noAutoSell) {\n\t\t\t// only disables sale if it's impossible\n\t\t\tif(step.sell && !this.canSell(i)){\n\t\t\t\tstep.sell=false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// set sell to its possible value\n\t\t\tif(step.sell != this.canSell(i)){\n\t\t\t\tstep.sell=this.canSell(i);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif(step.buy && !this.canBuy(i)){\n\t\t\tstep.buy = false;\n\t\t\tchanged = true;\n\t\t}\n\t\tvar new_cargo=step.buy?step.planet.sells:step.sell?null:this.steps[i-1].cargo;\n\t\tchanged = changed || step.cargo!=new_cargo;\n\t\tstep.cargo=new_cargo;\n\t\tif(changed){\n\t\t\tthis.updateStep(i+1);\n\t\t}\n\t},\n\tcountJobs:function(){\n\t\t// count all \"sell\" actions\n\t\treturn this.steps.reduce((a,step)=>a+=step.sell, 0);\n\t},\n\tcanPathTo:function(obj){\n\t\tfor(var i=1;i<this.steps.length-1;i++){\n\t\t\tif(intersect(this.steps[i-1].planet, this.steps[i].planet,\n\t\t\t\tthis.steps.at(-1).planet, obj))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\tpathToCollidesWith:function(obj){\n\t\tif(lineCrossesObj(this.steps.at(-1).planet,obj,player_star, 0.5)) return 'star';\n\t\tvar size=planet_size/cell_size;\n\t\t// console.log(obj,this.steps.at(-1).planet);\n\t\tfor(var planet of player_star.planets){\n\t\t\tif(planet!=obj && planet!=this.steps.at(-1).planet &&\n\t\t\t\tlineCrossesObj(this.steps.at(-1).planet,obj,planet, size)) return planet.name+' planet';\n\t\t}\n\t},\n\tcantTravelTo:function(planet){\n\t\tif(flightplan.steps.findIndex(x=>x.planet==planet)>=0) return 'planet already in flight plan';\n\t\tif(!this.canPathTo(planet)) return 'crosses existing path';\n\t\tvar name=this.pathToCollidesWith(planet);\n\t\tif(name) return 'path crosses '+name;\n\t\treturn false;\n\t},\n\tcantJumpTo:function(star,direction){\n\t\tif(star == player_star) return \"you're currently at this star\";\n\t\tif(star.visited) return \"you've already been here\";\n\t\tif(!this.canPathTo(direction)) return \"path to portal crosses existing path\";\n\t\tvar name=this.pathToCollidesWith(direction);\n\t\tif(name) return 'path crosses '+name;\n\t\treturn false;\n\t},\n}\n\nexport function redrawFlightplan(){\n\tvar html=flightplan.steps.map((step,i)=>{\n\t\tvar ret=[];\n\t\tif(step.start){\n\t\t\tret.push(`Arrived to <b>${player_star.name} star</b>`+(step.cargo?` with ${step.cargo}`:''));\n\t\t} else {\n\t\t\tret.push(`<div><b>${i}: ${step.planet.name} planet</b>`);\n\t\t\tif(step.planet.buys) ret.push(`<label><input type=\"checkbox\" ${step.sell?'checked':''} ${flightplan.canSell(i)?'':'disabled'} onchange=\"flightplan.setSell(${i},this.checked);redrawFlightplan()\"> Sell ${step.planet.buys}</label>`);\n\t\t\tif(step.planet.sells) ret.push(`<label><input type=\"checkbox\" ${step.buy?'checked':''} ${flightplan.canBuy(i)?'':'disabled'} onchange=\"flightplan.setBuy(${i},this.checked);redrawFlightplan()\"> Buy ${step.planet.sells}</label>`);\n\t\t\tret.push(`</div>`);\n\t\t\tif(step.cargo) ret.push(`Travel with ${step.cargo}`);\n\t\t\telse ret.push(`Travel empty`);\n\t\t}\n\t\treturn ret.join(' ');\n\t}).join(' ');\n\tflightplan.element.innerHTML=html;\n\tdocument.getElementById('fp_undo').style.display=flightplan.steps.length<=1?'none':'';\n\tdocument.getElementById('fp_hint').style.display=(shown_star==player_star)?'':'none';\n\n\tdocument.getElementById('fp_jobs_done').innerText=flightplan.countJobs();\n\tdocument.getElementById('fp_jobs_total').innerText=player_star.jobs;\n\t// document.getElementById('fp_jobs_prc').innerText=Math.round(flightplan.countJobs()/player_star.jobs*100);\n\n\tdocument.getElementById('fp_jump').style.display=(shown_star==player_star)?'none':'';\n\tif(shown_star!=player_star){\n\t\tvar reason=flightplan.cantJumpTo(shown_star, player_star.neighbours.directionOf(shown_star));\n\t\tdocument.getElementById('fp_jump_ok').style.display=reason?'none':'';\n\t\tdocument.getElementById('fp_jump_ok_star').innerText=shown_star.name+' star';\n\t\tdocument.getElementById('fp_jump_ok_jobs').innerText=shown_star.jobs;\n\t\tdocument.getElementById('fp_jump_no').style.display=reason?'':'none';\n\t\tdocument.getElementById('fp_jump_no_reason').innerText=reason;\n\t}\n}\n", "import { flightplan } from \"./flightplan.js\";\nimport { player_star } from \"./universe.js\";\n\nexport var planet_size=0;\nexport var cell_size=0;\nexport var portal_size=0;\n\n// flag: if portals has are located outside of \"planet area\" (1)\n// or same row/column as top-/bottom-/left-/right-most planets (0)\nexport var portals_ext=0;\n\n// extra space to reserve for portals\nexport const portal_pad=0.5;\n\nfunction draw_planet(ctx,planet){\n\tconst x=(planet.x+1*portals_ext+portal_pad)*cell_size;\n\tconst y=(planet.y+1*portals_ext+portal_pad)*cell_size;\n\tvar grd = ctx.createRadialGradient(x-1, y-1, 2, x, y, planet_size);\n\tgrd.addColorStop(0, planet.color_in);\n\tgrd.addColorStop(1, planet.color_out);\n\tctx.fillStyle = grd;\n\tctx.beginPath();\n\tctx.arc(x, y, planet_size, 0, 6);\n\tctx.fill();\n}\n\nfunction draw_portal(ctx,neighbour){\n\tvar x=(neighbour.x+portal_pad)*cell_size;\n\tvar y=(neighbour.y+portal_pad)*cell_size;\n\n\tif(neighbour.target==player_star) draw_player_there(ctx, x,y, neighbour.value);\n\n\tctx.strokeStyle = 'purple';\n\tif(neighbour.target) ctx.strokeStyle='violet';\n\tctx.lineWidth = 3;\n\tvar perimeter=Math.PI*portal_size;\n\tvar dashes_count=Math.round(perimeter/3);\n\tvar dashes_length=perimeter/dashes_count;\n\tctx.setLineDash([dashes_length, dashes_length]);\n\tctx.beginPath();\n\tctx.arc(x, y, portal_size, 0, 7);\n\t// if(neighbour.target==player_star){\n\t// \tctx.fillStyle = 'purple';\n\t// \tctx.fill();\n\t// }\n\tctx.stroke(); \n}\n\nfunction draw_player_here(ctx,x,y){\n\tctx.strokeStyle = 'violet';\n\tctx.fillStyle = 'purple';\n\tctx.lineWidth = 3;\n\tctx.setLineDash([1,0]);\n\tctx.beginPath();\n\tctx.arc(x, y, portal_size, 0, 7);\n\t// ctx.stroke(); \n\tctx.fill(); \n}\n\nfunction draw_player_there(ctx,x,y,angle){\n\t// x=(x+portal_pad)*cell_size;\n\t// y=(y+portal_pad)*cell_size;\n\tconst r=portal_size*1.73; // sqrt(3)\n\tconst point_x=function(a){ return r*Math.cos((a+angle)/180*Math.PI)+x; }\n\tconst point_y=function(a){ return -r*Math.sin((a+angle)/180*Math.PI)+y; }\n\tconst side=r*3.46;// 6/sqrt(3)\n\tconst height=r*3;// side*sqrt(3)/2\n\tctx.strokeStyle = 'purple';\n\tctx.lineWidth = 4;\n\tctx.setLineDash([1,0]);\n\tctx.beginPath();\n\tconst s=150;\n\tconst t=120;\n\tctx.moveTo(point_x(s), point_y(s));\n\tctx.lineTo(point_x(t), point_y(t));\n\tctx.lineTo(point_x(0), point_y(0));\n\tctx.lineTo(point_x(-t), point_y(-t));\n\tctx.lineTo(point_x(-s), point_y(-s));\n\t// ctx.moveTo(point_x(0), point_y(0));\n\t// ctx.lineTo(point_x(t), point_y(t));\n\t// ctx.lineTo(point_x(-t), point_y(-t));\n\t// ctx.lineTo(point_x(0), point_y(0));\n\tctx.stroke(); \n}\n\nexport function draw_star(ctx,star){\n\tvar max_size=ctx.canvas.width;\n\tcell_size=max_size/(star.size+2*portals_ext+2*portal_pad);\n\tplanet_size=cell_size/5;\n\tportal_size=portal_pad*cell_size/5;\n\tvar center=max_size/2;\n\tif(star.bright){\n\t\tvar grd = ctx.createRadialGradient(center, center, 0, center, center, cell_size/2);\n\t\tgrd.addColorStop(0, \"white\");\n\t\tgrd.addColorStop(0.5, star.color);\n\t\tgrd.addColorStop(1, \"black\");\n\t\tctx.fillStyle = grd;\n\t\tctx.fillRect(0, 0, max_size, max_size);\n\t} else {\n\t\tvar grd = ctx.createRadialGradient(center, center, 10, center, center, cell_size/2);\n\t\tgrd.addColorStop(0, star.color);\n\t\tgrd.addColorStop(1, \"black\");\n\t\tctx.fillStyle = grd;\n\t\tctx.fillRect(0, 0, max_size, max_size);\n\t}\n\tif(star==player_star){\n\t\tctx.beginPath();\n\t\tvar x0=(flightplan.steps[0].x+portal_pad)*cell_size;\n\t\tvar y0=(flightplan.steps[0].y+portal_pad)*cell_size;\n\t\tctx.moveTo(x0, y0);\n\t\tfor(var i=1; i<flightplan.steps.length;i++){\n\t\t\tvar x=(flightplan.steps[i].x+portal_pad)*cell_size;\n\t\t\tvar y=(flightplan.steps[i].y+portal_pad)*cell_size;\n\t\t\tctx.lineTo(x, y);\n\t\t}\n\t\tctx.strokeStyle='purple';\n\t\tctx.setLineDash([6, 6]);\n\t\tctx.lineWidth = 3;\n\t\tctx.stroke();\n\n\t\tdraw_player_here(ctx,x0,y0);\n\t} else {\n\t\t// const directionToPlayer=shown_star.neighbours.directionOf(player_star);\n\t\t// draw_player_there(ctx,directionToPlayer.x,directionToPlayer.y,directionToPlayer.value);\n\t}\n\tfor(var planet of star.planets){\n\t\tdraw_planet(ctx,planet);\n\t}\n\tfor(var neighbour of star.neighbours){\n\t\tdraw_portal(ctx,neighbour);\n\t}\n}\n", "import { draw_star } from \"./draw.js\";\nimport { flightplan, redrawFlightplan } from \"./flightplan.js\";\nimport { setupHints, set_shown_star, shown_star } from \"./hints.js\";\nimport { check, default_universe, loadUniverse, moveToNewStar, player_star, saveUniverse, set_player_star, stats } from \"./universe.js\";\n\nexport var mode='hard';\n\nvar c = document.getElementById(\"myCanvas\");\nvar ctx = c.getContext(\"2d\");\n\nif(mode=='test') loadUniverse(JSON.parse(default_universe));\nelse loadUniverse(JSON.parse(localStorage['space2d2'+mode] || default_universe));\n\nif(!check()) alert ('universe error, check console');\n\nset_shown_star(player_star);\n\nexport function redraw(){\ndraw_star(ctx,shown_star);\nsetupHints(shown_star,c,document.getElementById('hints'));\nredrawFlightplan();\ndocument.getElementById('mapTitle_player').style.display=(shown_star==player_star)?'':'none';\ndocument.getElementById('mapTitle_neighbour').style.display=(shown_star==player_star)?'none':'';\nif(shown_star!=player_star){\n    document.getElementById('mapTitle_neighbour_n').innerText=player_star.neighbours.indexOf(shown_star)+1;\n    document.getElementById('mapTitle_neighbour_total').innerText=player_star.neighbours.count;\n}\ndocument.getElementById('stats_s').innerText=stats.s;\ndocument.getElementById('stats_p').innerText=stats.p;\ndocument.getElementById('stats_js').innerText=stats.js;\ndocument.getElementById('stats_jf').innerText=stats.jf;\ndocument.getElementById('stats_jf_s').innerText=Math.round(stats.jf/stats.s*100)/100;\ndocument.getElementById('stats_jf_p').innerText=Math.round(stats.jf/stats.p*100);\ndocument.getElementById('stats_jf_js').innerText=Math.round(stats.jf/stats.js*100);\n// document.getElementById('stats_mr').innerText=stats.mr;\n// document.getElementById('stats_mrc').innerText=stats.mrc;\n// document.getElementById('stats_mrc_show').style.display=stats.mrc>1?'':'none';\n}\n\nredraw();\n\nexport function jump(){\nif(shown_star==player_star) return;\nif(shown_star.visited) return;\nstats.s++;\nstats.p+=flightplan.steps.length-1;\nstats.jf+=flightplan.countJobs();\nstats.js+=player_star.jobs;\nconst ratio=Math.round(flightplan.countJobs()/player_star.jobs*100);\n// if(ratio>stats.mr){\n// \tstats.mr=ratio;\n// \tstats.mrc=1;\n// }else if(ratio==stats.mr){\n// \tstats.mrc++;\n// }\nconsole.clear();\nmoveToNewStar(shown_star,player_star);\nvar lastCargo=flightplan.steps.at(-1).cargo;\nvar direction=shown_star.neighbours.directionOf(player_star);\nflightplan.init(direction.x,direction.y,lastCargo,document.getElementById('myFlightplan'));\nplayer_star.visited=true;\nset_player_star(shown_star);\nlocalStorage['space2d2'+mode]=JSON.stringify(saveUniverse());\n// location.reload();\nredraw();\nif(!check()) alert ('universe error, check console');\n}\n\nwindow.jump=jump;\nwindow.redraw=redraw;\nwindow.flightplan=flightplan;\nwindow.redrawFlightplan=redrawFlightplan;\nwindow.set_shown_star=set_shown_star;"],
  "mappings": "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",
  "names": ["c", "x", "c", "ctx", "mode"]
}
